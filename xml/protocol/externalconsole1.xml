<?xml version="1.0" encoding="utf-8"?>

<protocol>

	<software>External Console</software>

	<protocol>1</protocol>

	<description>
		Protocol used by SEL to communicate with external sources using TCP or web sockets.
	</description>

	<encoding id="ubyte" arraylength="ushort">

		<endianness type="*" value="big-endian" />
		
		<type name="game">
			<field name="type" type="ubyte">
				<constant name="pocket" value="1" />
				<constant name="minecraft" value="2" />
			</field>
			<field name="protocols" type="uint[]"></field>
		</type>

		<type name="node-stats">
			<field name="name" type="string" />
			<field name="tps" type="float" />
			<field name="ram" type="ulong" />
			<field name="cpu" type="float" />
		</type>

	</encoding>

	<packets>

		<section name="login">

			<packet name="auth-credentials" id="0" clientbound="true" serverbound="false">
				Credentials for login.
				<field name="protocol" type="ubyte">
					Protocol used by the server. If the client uses a different one it should close the connection without sending any packet.
				</field>
				<field name="hash-algorithm" type="string">
					Algorithm used by the server to match the the hash. If empty no hashing is done and the password is sent raw.
				</field>
				<field name="payload" type="ubyte[16]">
					Payload to add to the password encoded as UTF-8 (if hash algorithm is not empty) before hashing it.
				</field>
			</packet>

			<packet name="auth" id="1" clientbound="false" serverbound="true">
				<field name="hash" type="ubyte[]"></field>
			</packet>

			<packet name="welcome" id="2" clientbound="true" serverbound="false">
				<field name="status" type="ubyte"></field>
				<variants field="status">
					<variant name="accepted" value="0">
						<field name="remote-commands" type="bool"></field>
						<field name="software" type="string"></field>
						<field name="versions" type="ubyte[3]"></field>
						<field name="display-name" type="string"></field>
						<field name="protocols" type="game[]"></field>
						<field name="connected-nodes" type="string[]"></field>
					</variant>
					<variant name="wrong-hash" value="1">

					</variant>
					<variant name="timed-out" value="2">

					</variant>
				</variants>
			</packet>

		</section>

		<section name="status">

			<packet name="keep-alive" id="0" clientbound="true" serverbound="true">
				<field name="count" type="uint"></field>
			</packet>

			<packet name="update-nodes" id="1" clientbound="true" serverbound="false">
				<field name="action" type="ubyte">
					<constant name="add" value="0" />
					<constant name="remove" value="1" />
				</field>
				<field name="node" type="string"></field>
			</packet>

			<packet name="update-stats" id="2" clientbound="true" serverbound="false">
				<field name="online-players" type="uint"></field>
				<field name="max-players" type="uint"></field>
				<field name="uptime" type="uint"></field>
				<field name="upload" type="uint"></field>
				<field name="download" type="uint"></field>
				<field name="nodes" type="node-stats[]"></field>
			</packet>

		</section>

		<section name="play">

			<packet name="console-message" id="3" clientbound="true" serverbound="false">
				Logs a message from the server's console. It may be a result of a command, a debug message or any other message that the server retains able to be seen by the External Console.
				<field name="node" type="string">
					Name of the node that has created the log or an empty string if the log has been created by the hub or by a server implementation that isn't based on the hub-node structure.
				</field>
				<field name="timestamp" type="ulong">
					Unix timestamp in milliseconds that indicates the exact time when the log has been generated by the server.
				</field>
				<field name="logger" type="string">
					Name of the logger. It is the world name if the log has been generated by a world's message (like a broadcast or a chat message).
				</field>
				<field name="message" type="string">
					The logged message. It may contain Minecraft's formatting codes which should be translated into appropriate colours by the client-side implementation.
				</field>
			</packet>

			<packet name="command" id="4" clientbound="false" serverbound="true">
				Executes a command remotely if the server allows it. If not a [Permission Denied](#permission-denied) is sent back. The ideal client should never send this packet if remoteCommands field in [Welcome.Accepted](#accepted) is not true.
				<field name="command" type="string">
					Command to be executed on the server. On SEL servers it should start with a slash or a point (hub command) or a node name followed by the command (node command).
				</field>
			</packet>

			<packet name="permission-denied" id="5" clientbound="true" serverbound="false">
				Bodyless packet only sent in response to [Command](#command) when the server doesn't allow the execution of remote commands through the External Console protocol. The ideal client should never receive this packet avoiding the use of [Command](#command) if the remoteCommands field in [Welcome.Accepted](#accepted) is not true.
			</packet>

		</section>

	</packets>

</protocol>
