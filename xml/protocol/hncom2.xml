<?xml version="1.0" encoding="utf-8"?>

<protocol>

	<software>Hub-Node Communication</software>

	<protocol>2</protocol>

	<released>2017/3/21</released>

	<description>
		Protocol used for the communication between an hub and multiple nodes with support for Minecraft and Minecraft: Pocket Edition and different versions of their protocols.

		## Definitions

		### Hub
		The hub (server) is the network part of the game server and handles pings, login sequences, keep alive packets, queries, external consoles and everything else that is not related to the gameplay.
		A server can work with only an hub (nodeless) but every player that will try to join the server will be disconnected because the server is full after the login process.

		### Node
		The node (client) is the gameplay part of the game server. It contains worlds and entities and has only one network connection, with the hub.

		## Connection

		Hncom uses a packet-oriented TCP connection and every packet is prefixed with a little-endian unsigned 32-bits integer, without any exception.

		### Authentication
		The node starts the connection sending a [ConnectionRequest](#login_connection-request) packet with its credentials and waits for a [ConnectionResponse](#login_connection-response) packet.
	</description>

	<encoding id="ubyte" arraylength="varuint">

		<endianness type="*" value="big-endian" />

		<endianness type="ushort" value="little-endian" />

		<alias name="hub-id" type="varuint" />

		<alias name="world-id" type="varuint" />

		<type name="address">
			Internet protocol address. Could be either version 4 or 6.
			<field name="bytes" type="ubyte[]">
				Bytes of the address. The length may be 4 (for ipv4 addresses) or 16 (for ipv6 addresses). The byte order is always big-endian (network order).
			</field>
			<field name="port" type="ushort">
				Port of the address.
			</field>
		</type>

		<type name="game">
			Indicates a game and informations about its accepted protocols.
			<field name="type" type="ubyte">
				Identifier of the game.
				<constant name="pocket" value="1" />
				<constant name="minecraft" value="2" />
				<constant name="console" value="3" />
			</field>
			<field name="protocols" type="varuint[]">
				Protocols accepted by the server for the game. They should be ordered from oldest to newest.
			</field>
		</type>

		<type name="game-info">
			Indicates a game and informations about it.
			<field name="game" type="game">
				Informations about the the game and the protocols used.
			</field>
			<field name="motd" type="string">
				"Message of the day" which is displayed in the game's server list. It may contain Minecraft formatting codes.
			</field>
			<field name="port" type="ushort">
				Port, or main port if the server allows the connection from multiple ports, where the socket is listening for connections.
			</field>
		</type>

		<type name="plugin">
			A plugin loaded on the node. It may be used by the hub to display the plugins loaded on the server in queries.
			<field name="name" type="string">
				Name of the plugin.
			</field>
			<field name="version" type="string">
				Version of the plugin, usually in the format `major.minor[.release] [alpha|beta]`.
			</field>
		</type>

		<type name="motd">
			<field name="type" type="ubyte">
				<constant name="pocket" value="1" />
				<constant name="minecraft" value="2" />
				<constant name="console" value="3" />
			</field>
			<field name="motd" type="string" />
		</type>

		<type name="skin">
			Player's skin that will be sent to Minecraft: Pocket Edition clients.
			If the server only allows Minecraft players this type's fields should be empty.
			<field name="name" type="string">
				Name of the skin.
			</field>
			<field name="data" type="ubyte[]">
				RGBA map of the skin colours. Length should be, if the skin is not empty, 8192 (64x32) or 16384 (64x64) bytes.
			</field>
		</type>

		<type name="property">
			<type name="name" type="string" />
			<type name="value" type="string" />
			<type name="signature" type="string" />
		</type>

	</encoding>

	<packets>

		<section name="util">

			Packets used for sending more than one packet at once.

			<packet name="uncompressed" id="1" clientbound="true" serverbound="true">
				<field name="packets" type="ubyte[][]" />
			</packet>

			<packet name="compressed" id="2" clientbound="true" serverbound="true">
				<field name="size" type="varuint" />
				<field name="payload" type="bytes" />
			</packet>

		</section>

		<section name="login">

			Packets used during the authentication process to exchange informations.

			<packet name="connection-request" id="3" clientbound="false" serverbound="true">
				First real packet sent by the client with its informations.
				<field name="protocol" type="varuint">
					Version of the protocol used by the client that must match the hub's one.
				</field>
				<field name="password" type="string">
					Password, if the hub requires one, or an empty string.
				</field>
				<field name="name" type="string">
					Name of the node that will be validated by the hub. It should always be lowercase and only contain letters, numbers, dashes and underscores.
				</field>
				<field name="main" type="bool" default="true">
					Indicates whether the node accepts clients when they first connect to the hub or exclusively when they are manually transferred.
				</field>
			</packet>

			<packet name="connection-response" id="4" clientbound="true" serverbound="false">
				Reply sent after the [ConnectionRequest](#login_connection-request) packet if the node's ip has been accepted. It indicates the status of the connection.
				<field name="status" type="ubyte">
					Indicates the status of connection. If not 0, it indicates an error.
					<constant name="ok" value="0" />
					<constant name="outdated-hub" value="1">
						The hub uses an old version of hncom
					</constant>
					<constant name="outdated-node" value="2">
						The node uses an old version of hncom
					</constant>
					<constant name="password-required" value="3">
						A password is required to connect
					</constant>
					<constant name="wrong-password" value="4">
						The password doesn't match the hub's one
					</constant>
					<constant name="invalid-name-length" value="5">
						The name is too short or too long
					</constant>
					<constant name="invalid-name-characters" value="6">
						The name contains invalid characters
					</constant>
					<constant name="name-already-used" value="7">
						There's already a node connected with the same name
					</constant>
					<constant name="name-reserved" value="8">
						The name cannot be used because the hub has reserved it for something else
					</constant>
				</field>
				<field name="protocol" type="varuint" when="status==1||status==2">
					Indicates the version of the protocol used by the hub when the status code indicates that the hub or the node is obsolete.
				</field>
			</packet>

			<packet name="hub-info" id="5" clientbound="true" serverbound="false">
				Informations about the hub.
				<field name="time" type="varulong">
					Unix time with microseconds precision that indicates the exact moment when this packet was created. It's used by the node to calculate the latency.
				</field>
				<field name="server-id" type="varulong">
					Server's id, either given by a snoop system or randomly generated at runtime.
				</field>
				<field name="reserved-uuids" type="varulong">
					First number of the 4,294,967,296 (2³²) reserved by the hub to create the node's UUIDs. Every UUID generated by the node is formed by the server's id (most signicant) and the next reserved uuid (least significant). This way every UUID in the hub and in the connected nodes is always different.
				</field>
				<field name="display-name" type="string">
					Unformatted name of the server as indicated in the hub's configuration file.
				</field>
				<field name="online-mode" type="bool">
					Indicates whether the player are authenticated using the games' official authentication services and their identity should be trusted.
				</field>
				<field name="games-info" type="game-info[]">
					Informations about the games supported by the hub.
				</field>
				<field name="online" type="varuint">
					Number of players currently online and connected to other nodes.
				</field>
				<field name="max" type="varint">
					Number of maximum players that can connect to the server (that is the sum of the max players of the nodes already connected). The number may change after this node connects.
					<constant name="unlimited" value="-1" />
				</field>
				<field name="language" type="string">
					Default server's language in format (language_COUNTRY, e.g. en_GB) and also the default language for players that don't specify their language or for the ones which language is not supported by the server.
				</field>
				<field name="accepted-languages" type="string[]">
					Languages accepted by the server in the same format as [language](#login_hub-info_language). The list should always contain at least one element (the default language).
				</field>
				<field name="additional-json" type="string">
					Optional informations about the server's software, social accounts, system and options in the format indicated below.
					```json
					{
					   "software": {
					      "name": "SEL",
					      "version": "1.0.4",
					      "stable": true
					   },
					   "minecraft": {
					      "edu": false,
					      "realm": true
					   },
					   "social": {
					      "website": "example.com",
					      "facebook": "example-official",
					      "twitter": "example_tweets",
					      "youtube": "examplechannel",
					      "instagram": "example",
					      "google_plus": "example-plus"					
					   },
					   "system": {
					      "os": "Ubuntu 16.04",
					      "cpu": "Intel(R) Core(TM) i5-5200U CPU @ 2.20GHz",
					      "cores": 2,
					      "ram": 2147483648
					   }
					}
					```
				</field>
			</packet>

			<packet name="node-info" id="6" clientbound="false" serverbound="true">
				Informations about the node.
				<field name="time" type="varulong">
					Unix time with microseconds precision that indicates the exact moment when this packet was created. It's used by the hub to calculate the latency.
				</field>
				<field name="max" type="varuint">
					Maximum number of players accepted by node.
					<constant name="unlimited" value="0" />
				</field>
				<field name="accepted-games" type="game[]">
					Informations about the games accepted by the node. There should be at least one combination of game/protocol that is also accepted by hub as indicated in [HubInfo.gamesInfo](#login_hub-info_games-info), otherwise the node will never receive any player.
				</field>
				<field name="plugins" type="plugin[]">
					List of plugins loaded on the node for creating queries on the hub.
				</field>
				<field name="additional-json" type="string">
					Optional informations about the server's software and system, similar to [HubInfo.additionalJson](#login_hub-info_additional-json).
					```json
					{
					   "software": {
					      "name": "SEL",
					      "version": "1.0.4",
					      "stable": true
					   },
					   "system": {
					      "os": "Windows 10",
					      "cpu": "Intel(R) Core(TM) i7-5700U CPU @ 3.40GHz",
					      "cores": 4,
					      "ram": 8589934592
					   }
					}
					```
				</field>
			</packet>

		</section>

		<section name="status">

			Node-related packets and updates.

			<packet name="add-node" id="7" clientbound="true" serverbound="false">
				Notifies the node that another node (that is not itself) has connected to the hub.
				<field name="hub-id" type="hub-id">
					Identifier given by the hub to uniquey identify the node.
				</field>
				<field name="name" type="string">
					Node's name used for displaying and identification purposes.
				</field>
				<field name="main" type="bool">
					Whether the node is a main node (see [ConnectionRequest.main](#login_connection-request_main)).
				</field>
				<field name="accepted-games" type="game[]">
					Indicates the game accepted by the node.
				</field>
			</packet>

			<packet name="remove-node" id="8" clientbound="true" serverbound="false">
				Notifies the node that another node, previously added with [AddNode](#status_add-node) has disconnected from the hub.
				<field name="hub-id" type="hub-id">
					Node's id given by the hub.
				</field>
			</packet>

			<packet name="message-serverbound" id="9" clientbound="false" serverbound="true">
				Sends a binary message to some selected nodes or broadcast it.
				<field name="addressees" type="hub-id[]">
					Addressees of the message. If the array is empty the message is broadcasted to every connected node.
				</field>
				<field name="payload" type="ubyte[]">
					Bytes to be sent/broadcasted. It may be a serialised packet of a plugin-defined protocol.
				</field>
			</packet>

			<packet name="message-clientbound" id="10" clientbound="true" serverbound="false">
				Receives a binary message sent by another node using [MessageServerbound](#status_message-serverbound).
				<field name="sender" type="hub-id">
					Id of the node that has sent the message.
				</field>
				<field name="payload" type="ubyte[]">
					Bytes received. It could be a serialised packet of a plugin-defined packet.
				</field>
			</packet>

			<packet name="players" id="11" clientbound="true" serverbound="false">
				Updates the number of players on the server.
				<field name="online" type="varuint">
					Players currently online in the whole server (connected to a node).
				</field>
				<field name="max" type="varint">
					Maximum number of players that can connect to server.
					<constant name="unlimited" value="-1" />
				</field>
			</packet>

			<packet name="resources-usage" id="12" clientbound="false" serverbound="true">
				Updates the usage of the system's resources of the node.
				<field name="tps" type="float">
					Ticks per second of the node, in a range from 0 to 20, where a number lower than 20 indicates lag.
				</field>
				<field name="ram" type="varulong">
					Bytes of RAM used by the node.
				</field>
				<field name="cpu" type="float">
					Percentage of CPU used by the node. It may be higher than 100 if the node has more than 1 CPU.
				</field>
			</packet>

			<packet name="log" id="13" clientbound="false" serverbound="true">
				Sends a log to the hub.
				<field name="timestamp" type="varulong">
					Unix time (in milliseconds) that indicates the exact creation time of the log (for ordering purposes).
				</field>
				<field name="world" type="varint">
					<constant name="no-world" value="-1" />
				</field>
				<field name="logger" type="string" when="world<0">
					Name of the logger thas has generated the log, if the log doesn't come from a world.
				</field>
				<field name="message" type="string">
					Logged message. It may contain Minecraft formatting codes.
				</field>
				<field name="command-id" type="varint">
					Identifier of the command that has generated the output or -1 if the log wasn't generated by a command.
				</field>
			</packet>

			<packet name="remote-command" id="14" clientbound="true" serverbound="false">
				Executes a command on the node.
				<field name="origin" type="ubyte">
					Origin of the command. It could be the hub itself or an external source.
					<constant name="hub" value="0" />
					<constant name="external-console" value="1" />
					<constant name="rcon" value="2" />
				</field>
				<field name="sender" type="address" when="origin!=0">
					Address of the sender if the command has been sent from an external source and not the hub.
				</field>
				<field name="command" type="string">
					Commands and arguments that should be executed on the node. For example `say hello world` or `transfer steve lobby12`.
				</field>
				<field name="command-id" type="varint">
					Identifier of the command. It's sent in [Log.commandId](#status_log_command-id) if the command generates an output.
				</field>
			</packet>

			<packet name="update-list" id="15" clientbound="false" serverbound="true">
				Updates a list.
				<field name="list" type="ubyte">
					Type of the list to update.
					<constant name="whitelist" value="0" />
					<constant name="blacklist" value="1" />
				</field>
				<field name="action" type="ubyte">
					Whether to add or removed the player from the list.
					<constant name="add" value="0" />
					<constant name="remove" value="1" />
				</field>
				<field name="type" type="ubyte" />
				<variants field="type">
					<variant name="by-hub-id" value="0">
						<field name="hub-id" type="hub-id" />
					</variant>
					<variant name="by-name" value="1">
						<field name="username" type="string">
							Case-insensitive player's username. Spaces may be replaced by dashes.
						</field>
					</variant>
					<variant name="by-uuid" value="2">
						<field name="game" type="ubyte">
							<constant name="pocket" value="1" />
							<constant name="minecraft" value="2" />
							<constant name="console" value="3" />
						</field>
						<field name="uuid" type="uuid" />
					</variant>
				</variants>
			</packet>

			<packet name="reload" id="16" clientbound="true" serverbound="false">
				Notifies the node that the hub's reloadeable settings have been reloaded and that the node should also reload its resources (for example plugin's settings).
				The fields of the packet may be empty if not updated during the reload.
				<field name="display-name" type="string">
					Display name of the server, same as [HubInfo.displayName](#login_hub-info_display-name).
				</field>
				<field name="motds" type="motd[]">
					New MOTDs (message of the day) for the supported games.
				</field>
				<field name="language" type="string">
					Main language of the server, in the same format as [HubInfo.language](#login_hub-info_language).
				</field>
				<field name="accepted-languages" type="string[]" />
				<field name="social-json" type="string" />
			</packet>

		</section>

		<section name="player">

			Packets related to a player. The first field of every packet is an `hub id` that uniquely identifies a player in the hub and never changes until it's disconnected.

			<packet name="add" id="17" clientbound="true" serverbound="false">
				Adds a player to the node.
				<field name="hub-id" type="hub-id" />
				<field name="reason" type="ubyte">
					Reason for which the player has been added to the node.
					<constant name="first-join" value="0">
						The player has been automatically put on this node because it's a non-full main node
					</constant>
					<constant name="transferred" value="1">
						The player has been transferred to this node
					</constant>
					<constant name="forcibly-transferred" value="2">
						The player was on a node that has wrongly disconnected (probably crashing) and the player has been transferred to the first non-full main node
					</constant>
				</field>
				<field name="type" type="ubyte">
					Game of the client, which could either be Minecraft or Minecraft: Pocket Edition.
				</field>
				<field name="protocol" type="varuint">
					Version of the protocol used by the client.
				</field>
				<field name="version" type="string">
					Version of the game used by the client, usually in the format major.minor[.patch], calculated by the server or passed by the client during the authentication process. The node should verify that the version exists and matches the protocol in the previous field.
				</field>
				<field name="username" type="string">
					Username of the player.
				</field>
				<field name="display-name" type="string">
					Display name of the player, which can contain formatting codes. By default it's equals to the username but it can be updated by the node using [UpdateDisplayName](#player_update-display-name).
				</field>
				<field name="dimension" type="ubyte" when="reason!=0">
					Dimension in which the player was playing before being transferred.
					It's used to send the game's change dimension packet to despawn old entities and delete old chunks.
					<constant name="overworld" value="0" />
					<constant name="nether" value="1" />
					<constant name="end" value="2" />
				</field>
				<field name="view-distance" type="varuint" when="reason!=0">
					Client's view distance (or chunk radius). See [UpdateViewDistance.viewDistance](#player_update-view-distance_view-distance) for more informations.
				</field>
				<field name="client-address" type="address">
					Remote address of the client.
				</field>
				<field name="server-address" type="string">
					Ip used by the client to connect to the server. The value of this field is the address the client has saved in its servers list. For example a client that joins through `localhost` and a client that joins through `127.0.0.1` will connect to the same server but the field of this value will be different (`localhost` for the first client and `127.0.0.1` for the second).
				</field>
				<field name="server-port" type="ushort">
					Port used by the client to connect to the server.
				</field>
				<field name="uuid" type="uuid">
					Client's UUID, given by Mojang's or Microsoft's services if the server is in online mode or given by the client (and not verified) if the server is in offline mode.
				</field>
				<field name="skin" type="skin">
					Client's skin, given by the client or downloaded from Mojang's services in online mode.
				</field>
				<field name="language" type="string">
					Client's language, in the same format as [HubInfo.language](#login_hub-info_language), which should be updated from the node when the client changes it. See also [UpdateLanguage.language](#player_update-language_language).
				</field>
				<field name="input-mode" type="ubyte">
					Client's input mode. See [UpdateInputMode.inputMode](#player_update-input-mode_input-mode) for more informations.
					<constant name="keyboard" value="0" />
					<constant name="touch" value="1" />
					<constant name="controller" value="2" />
				</field>
				<field name="latency" type="varuint">
					Client's latency (ping time). See [UpdateLatency.latency](#player_update-latency_latency) for more informations.
				</field>
				<variants field="type">
					<variant name="pocket" value="1">
						A Minecraft: Pocket Edition client.
						<field name="xuid" type="varlong">
							XBOX Live id, which is a unique identifier for authenticated players or 0 if the server is in offline mode.
						</field>
						<field name="edu" type="bool">
							Indicates whether the client is using the [Education Edition](https://education.minecraft.net) variant of the game.
						</field>
						<field name="packet-loss" type="float">
							Client's packet loss calculated from the hub. See [UpdatePacketLoss.packetLoss](#player_update-packet-loss_packet-loss) for more informations.
						</field>
						<field name="device-os" type="ubyte">
							Client's operative system, if supplied by the client. This field's value may be used to divide players that play from a phone from players that play on a computer.
							<constant name="unknown" value="0" />
							<constant name="android" value="1" />
							<constant name="ios" value="2" />
							<constant name="osx" value="3" />
							<constant name="fire-os" value="4" />
							<constant name="gear-vr" value="5" />
							<constant name="hololens" value="6" />
							<constant name="windows10" value="7" />
							<constant name="windows32" value="8" />
							<constant name="dedicated" value="9" />
						</field>
						<field name="device-model" type="string">
							Client's device model, if supplied by the client. This field is usually a string in the format `MANUFACTURER MODEL`: for example, the Oneplus one is `ONEPLUS A0001`. This field's value may be used to ban low-end devices.
						</field>
					</variant>
					<variant name="minecraft" value="2">
						A Minecraft client.
						<field name="properties" type="property[]">
							Additional properties like textures when the server is on online mode.
						</field>
					</variant>
					<variant name="console" value="3" />
				</variants>
			</packet>

			<packet name="remove" id="18" clientbound="true" serverbound="false">
				Removes a player from the node. If the player is removed using [Kick](#player_kick) or [Transfer](#player_transfer) this packet is not sent.
				<field name="hub-id" type="hub-id" />
				<field name="reason" type="ubyte">
					Reason of the disconnection.
					<constant name="left" value="0" />
					<constant name="timed-out" value="1" />
					<constant name="kicked" value="2">
						Kicked by the hub
					</constant>
					<constant name="transferred" value="3">
						Transferred by the hub
					</constant>
				</field>
			</packet>

			<packet name="kick" id="19" clientbound="false" serverbound="true">
				Kicks a player from the node and the whole server. When a player is disconnected from the node using this packet the hub will not send the [Remove](#player_remove) packet.
				<field name="hub-id" type="hub-id" />
				<field name="reason" type="string">
					Reason of the disconnection that will be displayed in the client's disconnection screen.
				</field>
				<field name="translation" type="bool">
					Whether the previous string should be translated client-side or not.
				</field>
				<field name="parameters" type="string[]" when="translation==true">
					Optional parameters for the translation.
				</field>
			</packet>

			<packet name="transfer" id="20" clientbound="false" serverbound="true">
				Transfers a player to another node. When a player is transferred from the node the hub will not send the [Remove](#login_remove) packet and there's no way, for the node, to know whether the player was disconnected or successfully transferred, if not using messages through a user-defined protocol.
				<field name="hub-id" type="hub-id" />
				<field name="node" type="hub-id">
					Id of the node that player will be transferred to. It should be an id of a connected node (which can be calculated using [AddNode](#status_add-node) and [RemoveNode](#status_remove-node)), otherwise the player will be disconnected or moved to another node (see the following field).
				</field>
				<field name="on-fail" type="ubyte">
					Indicates the action to be taken when a transfer fails because the indicated node is not connected anymore or it cannot accept the given player's game type or protocol. If the indicated node is full the player will be simply disconnected with the `Server Full` message.
					<constant name="disconnect" value="0">
						Disconnect with `End of Stream` message
					</constant>
					<constant name="auto" value="1">
						Connect to the first available node or disconnects if there isn't one
					</constant>
					<constant name="reconnect" value="2">
						Connect to this node, but as a new player
					</constant>
				</field>
			</packet>

			<packet name="update-display-name" id="21" clientbound="false" serverbound="true">
				Updates the player's display name when it changes.
				<field name="hub-id" type="hub-id" />
				<field name="display-name" type="string">
					Player's display name that can contain formatting codes. Prefixes and suffixes should be avoided.
				</field>
			</packet>

			<packet name="update-world" id="22" clientbound="false" serverbound="true">
				Updates player's world and dimension.
				<field name="hub-id" type="hub-id" />
				<field name="world" type="world-id" />
			</packet>

			<packet name="update-view-distance" id="23" clientbound="false" serverbound="true">
				Update's the player's view distance (or chunk radius). This packet is sent when the client updates its view distance and the server accepts it.
				<field name="hub-id" type="hub-id" />
				<field name="view-distance" type="varuint" />
			</packet>

			<packet name="update-language" id="24" clientbound="false" serverbound="true">
				Updates the player's language when the client changes it.
				<field name="hub-id" type="hub-id" />
				<field name="language" type="string">
					Player's language in the same format as [HubInfo.language](#login_hub-info_language).
				</field>
			</packet>

			<packet name="update-gamemode" id="25" clientbound="true" serverbound="true">
				The client (node) always send a confirmation to the hub when this packet is received.
				<field name="hub-id" type="hub-id" />
				<field name="gamemode" type="ubyte" />
			</packet>

			<packet name="update-input-mode" id="26" clientbound="true" serverbound="false">
				Update the player's current input mode.
				<field name="hub-id" type="hub-id" />
				<field name="input-mode" type="ubyte">
					Player's input mode.
					<constant name="keyboard" value="0">
						Keyboard and mouse
					</constant>
					<constant name="touch" value="1">
						Touchscreen
					</constant>
					<constant name="controller" value="2">
						Generic controller
					</constant>
				</field>
			</packet>

			<packet name="update-latency" id="27" clientbound="true" serverbound="false">
				Updates the latency between the player and the hub.
				<field name="hub-id" type="hub-id" />
				<field name="latency" type="varuint">
					Player's latency in milliseconds. The latency between the client and the node is then calculated adding the latency between the node and the hub (calculated using [HubInfo.time](#login_hub-info_time)) to this field's value.
				</field>
			</packet>

			<packet name="update-packet-loss" id="28" clientbound="true" serverbound="false">
				Updates the player's packet loss if it uses a connectionless protocol like UDP.
				<field name="hub-id" type="hub-id" />
				<field name="packet-loss" type="float">
					Percentage of lost packets in range 0 (no packet lost) to 100 (every packet lost).
				</field>
			</packet>

			<packet name="game-packet" id="29" clientbound="true" serverbound="true">
				Sends data to client or handles data received from the client.
				<field name="hub-id" type="hub-id" />
				<field name="packet" type="bytes">
					Serialised packet ready to be encrypted or encapsulated and sent to the client when this packet is serverbound or packet already unencrypted and uncompressed ready to be handled by the node otherwise.

					#### Format

					##### Minecraft (serverbound)
					The packet is prefixed with a varuint-encoded 0 if the packet is not compressed or with the uncompressed packet's length encoded as a varuint if the packet is compressed.

					##### Minecraft (clientbound)
					The packet is already unencrypted and uncompressed and ready to be handled as a serverbound packet.

					##### Minecraft: Pocket Edition (serverbound)
					The packet is simply encoded (may be compressed in a Batch packet) and ready to be encapsulated using RakNet.

					##### Minecraft: Pocket Edition (clientbound)
					The packet is already unencrypted and uncompressed if it was a Batch packet and ready to be handled as a serverbound packet.
				</field>
			</packet>

			<packet name="ordered-game-packet" id="30" clientbound="false" serverbound="true">
				Sends data to the client but order it because it could be sent by the node unordered, due to compressed packet sent delayed.
				<field name="hub-id" type="hub-id" />
				<field name="order" type="varuint">
					Order of the packet. If the hub receives a packet with an id different from 0 or the latest ordered packet's order + 1 it should wait for the packets with the missing order(s) before sending.
				</field>
				<field name="packet" type="bytes">
					Serialised packet (see [GamePacket.packet](#player_game-packet_packet)).
				</field>
			</packet>

		</section>

		<section name="world">

			<packet name="add" id="31" clientbound="false" serverbound="true">
				<field name="world-id" type="world-id" />
				<field name="name" type="string" />
				<field name="dimension" type="ubyte">
					<constant name="overworld" value="0" />
					<constant name="nether" value="1" />
					<constant name="end" value="2" />
				</field>
				<field name="generator" type="ubyte">
					<constant name="default" value="0" />
					<constant name="flat" value="1" />
				</field>
				<field name="difficulty" type="ubyte">
					<constant name="peaceful" value="0" />
					<constant name="easy" value="1" />
					<constant name="normal" value="2" />
					<constant name="hard" value="3" />
					<constant name="hardcore" value="4" />
				</field>
				<field name="gamemode" type="ubyte">
					<constant name="survival" value="0" />
					<constant name="creative" value="1" />
					<constant name="adventure" value="2" />
					<constant name="spectator" value="3" />
				</field>
				<field name="spawn-point" type="varint<xz>" />
				<field name="time" type="short" />
				<field name="seed" type="varint" />
				<field name="parent" type="varint" default="-1" />
			</packet>

			<packet name="remove" id="32" clientbound="false" serverbound="true">
				<field name="world-id" type="world-id" />
			</packet>

			<packet name="update-difficulty" id="33" clientbound="false" serverbound="true">
				<field name="world-id" type="world-id" />
				<field name="difficulty" type="ubyte" />
			</packet>

			<packet name="update-gamemode" id="34" clientbound="false" serverbound="true">
				<field name="world-id" type="world-id" />
				<field name="gamemode" type="ubyte" />
			</packet>

			<packet name="request-creation" id="35" clientbound="true" serverbound="false">
				<field name="name" type="string" />
				<field name="dimension" type="ubyte" />
				<field name="generator" type="ubyte" />
				<field name="difficulty" type="ubyte" />
				<field name="gamemode" type="ubyte" />
				<field name="seed" type="varint" />
				<field name="parent" type="varint" default="-1" />
			</packet>

		</section>

		<section name="panel">

			<packet name="connection" id="36" clientbound="true" serverbound="false">
				<field name="hash" type="ubyte[64]" />
				<field name="address" type="ubyte[]" />
				<field name="world-id" type="world-id" />
			</packet>

		</section>

	</packets>

</protocol>
