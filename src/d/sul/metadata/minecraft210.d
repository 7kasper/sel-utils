/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/metadata/minecraft210.xml
 */
module sul.metadata.minecraft210;

import std.typecons : Tuple, tuple;

import sul.utils.buffer : Buffer;
import sul.utils.var;

static import sul.protocol.minecraft210.types;

alias Changed(T) = Tuple!(T, "value", bool, "changed");

class Metadata {

	private Changed!(byte) _entityFlags;

	public pure nothrow @property @safe @nogc byte entityFlags() {
		return _entityFlags.value;
	}

	public pure nothrow @property @safe @nogc byte entityFlags(byte value) {
		_entityFlags.changed = true;
		_entityFlags.value = value;
		return value;
	}

	public pure nothrow @property @safe @nogc bool onFire() {
		return (_entityFlags.value >>> 0) & 1;
	}

	public pure nothrow @property @safe @nogc bool onFire(bool value) {
		_entityFlags.changed = true;
		if(value) _entityFlags.value |= (cast(byte)true << 0);
		else _entityFlags.value &= ~(cast(byte)true << 0);
		return value;
	}

	public pure nothrow @property @safe @nogc bool sneaking() {
		return (_entityFlags.value >>> 1) & 1;
	}

	public pure nothrow @property @safe @nogc bool sneaking(bool value) {
		_entityFlags.changed = true;
		if(value) _entityFlags.value |= (cast(byte)true << 1);
		else _entityFlags.value &= ~(cast(byte)true << 1);
		return value;
	}

	public pure nothrow @property @safe @nogc bool sprinting() {
		return (_entityFlags.value >>> 3) & 1;
	}

	public pure nothrow @property @safe @nogc bool sprinting(bool value) {
		_entityFlags.changed = true;
		if(value) _entityFlags.value |= (cast(byte)true << 3);
		else _entityFlags.value &= ~(cast(byte)true << 3);
		return value;
	}

	public pure nothrow @property @safe @nogc bool invisible() {
		return (_entityFlags.value >>> 5) & 1;
	}

	public pure nothrow @property @safe @nogc bool invisible(bool value) {
		_entityFlags.changed = true;
		if(value) _entityFlags.value |= (cast(byte)true << 5);
		else _entityFlags.value &= ~(cast(byte)true << 5);
		return value;
	}

	public pure nothrow @property @safe @nogc bool glowing() {
		return (_entityFlags.value >>> 6) & 1;
	}

	public pure nothrow @property @safe @nogc bool glowing(bool value) {
		_entityFlags.changed = true;
		if(value) _entityFlags.value |= (cast(byte)true << 6);
		else _entityFlags.value &= ~(cast(byte)true << 6);
		return value;
	}

	public pure nothrow @property @safe @nogc bool gliding() {
		return (_entityFlags.value >>> 7) & 1;
	}

	public pure nothrow @property @safe @nogc bool gliding(bool value) {
		_entityFlags.changed = true;
		if(value) _entityFlags.value |= (cast(byte)true << 7);
		else _entityFlags.value &= ~(cast(byte)true << 7);
		return value;
	}

	private Changed!(uint) _air = tuple(cast(uint)300, false);

	public pure nothrow @property @safe @nogc uint air() {
		return _air.value;
	}

	public pure nothrow @property @safe @nogc uint air(uint value) {
		_air.changed = true;
		_air.value = value;
		return value;
	}

	private Changed!(string) _nametag;

	public pure nothrow @property @safe @nogc string nametag() {
		return _nametag.value;
	}

	public pure nothrow @property @safe @nogc string nametag(string value) {
		_nametag.changed = true;
		_nametag.value = value;
		return value;
	}

	private Changed!(bool) _showNametag;

	public pure nothrow @property @safe @nogc bool showNametag() {
		return _showNametag.value;
	}

	public pure nothrow @property @safe @nogc bool showNametag(bool value) {
		_showNametag.changed = true;
		_showNametag.value = value;
		return value;
	}

	private Changed!(bool) _silent;

	public pure nothrow @property @safe @nogc bool silent() {
		return _silent.value;
	}

	public pure nothrow @property @safe @nogc bool silent(bool value) {
		_silent.changed = true;
		_silent.value = value;
		return value;
	}

	private Changed!(bool) _noGravity;

	public pure nothrow @property @safe @nogc bool noGravity() {
		return _noGravity.value;
	}

	public pure nothrow @property @safe @nogc bool noGravity(bool value) {
		_noGravity.changed = true;
		_noGravity.value = value;
		return value;
	}

	private Changed!(sul.protocol.minecraft210.types.Slot) _potion;

	public pure nothrow @property @safe @nogc sul.protocol.minecraft210.types.Slot potion() {
		return _potion.value;
	}

	public pure nothrow @property @safe @nogc sul.protocol.minecraft210.types.Slot potion(sul.protocol.minecraft210.types.Slot value) {
		_potion.changed = true;
		_potion.value = value;
		return value;
	}

	private Changed!(ulong) _spawnPosition;

	public pure nothrow @property @safe @nogc ulong spawnPosition() {
		return _spawnPosition.value;
	}

	public pure nothrow @property @safe @nogc ulong spawnPosition(ulong value) {
		_spawnPosition.changed = true;
		_spawnPosition.value = value;
		return value;
	}

	private Changed!(float) _radius = tuple(cast(float)0.5, false);

	public pure nothrow @property @safe @nogc float radius() {
		return _radius.value;
	}

	public pure nothrow @property @safe @nogc float radius(float value) {
		_radius.changed = true;
		_radius.value = value;
		return value;
	}

	private Changed!(uint) _color;

	public pure nothrow @property @safe @nogc uint color() {
		return _color.value;
	}

	public pure nothrow @property @safe @nogc uint color(uint value) {
		_color.changed = true;
		_color.value = value;
		return value;
	}

	private Changed!(bool) _isSinglePoint;

	public pure nothrow @property @safe @nogc bool isSinglePoint() {
		return _isSinglePoint.value;
	}

	public pure nothrow @property @safe @nogc bool isSinglePoint(bool value) {
		_isSinglePoint.changed = true;
		_isSinglePoint.value = value;
		return value;
	}

	private Changed!(uint) _particleId;

	public pure nothrow @property @safe @nogc uint particleId() {
		return _particleId.value;
	}

	public pure nothrow @property @safe @nogc uint particleId(uint value) {
		_particleId.changed = true;
		_particleId.value = value;
		return value;
	}

	private Changed!(uint) _particleParameter1;

	public pure nothrow @property @safe @nogc uint particleParameter1() {
		return _particleParameter1.value;
	}

	public pure nothrow @property @safe @nogc uint particleParameter1(uint value) {
		_particleParameter1.changed = true;
		_particleParameter1.value = value;
		return value;
	}

	private Changed!(uint) _particleParameter2;

	public pure nothrow @property @safe @nogc uint particleParameter2() {
		return _particleParameter2.value;
	}

	public pure nothrow @property @safe @nogc uint particleParameter2(uint value) {
		_particleParameter2.changed = true;
		_particleParameter2.value = value;
		return value;
	}

	private Changed!(uint) _hookedEntity;

	public pure nothrow @property @safe @nogc uint hookedEntity() {
		return _hookedEntity.value;
	}

	public pure nothrow @property @safe @nogc uint hookedEntity(uint value) {
		_hookedEntity.changed = true;
		_hookedEntity.value = value;
		return value;
	}

	private Changed!(byte) _arrowFlags;

	public pure nothrow @property @safe @nogc byte arrowFlags() {
		return _arrowFlags.value;
	}

	public pure nothrow @property @safe @nogc byte arrowFlags(byte value) {
		_arrowFlags.changed = true;
		_arrowFlags.value = value;
		return value;
	}

	public pure nothrow @property @safe @nogc bool critical() {
		return (_arrowFlags.value >>> 0) & 1;
	}

	public pure nothrow @property @safe @nogc bool critical(bool value) {
		_arrowFlags.changed = true;
		if(value) _arrowFlags.value |= (cast(byte)true << 0);
		else _arrowFlags.value &= ~(cast(byte)true << 0);
		return value;
	}

	private Changed!(uint) _timeSinceLastHit;

	public pure nothrow @property @safe @nogc uint timeSinceLastHit() {
		return _timeSinceLastHit.value;
	}

	public pure nothrow @property @safe @nogc uint timeSinceLastHit(uint value) {
		_timeSinceLastHit.changed = true;
		_timeSinceLastHit.value = value;
		return value;
	}

	private Changed!(uint) _forwardDirection = tuple(cast(uint)1, false);

	public pure nothrow @property @safe @nogc uint forwardDirection() {
		return _forwardDirection.value;
	}

	public pure nothrow @property @safe @nogc uint forwardDirection(uint value) {
		_forwardDirection.changed = true;
		_forwardDirection.value = value;
		return value;
	}

	private Changed!(float) _damageTaken = tuple(cast(float)0, false);

	public pure nothrow @property @safe @nogc float damageTaken() {
		return _damageTaken.value;
	}

	public pure nothrow @property @safe @nogc float damageTaken(float value) {
		_damageTaken.changed = true;
		_damageTaken.value = value;
		return value;
	}

	private Changed!(uint) _boatVariant;

	public pure nothrow @property @safe @nogc uint boatVariant() {
		return _boatVariant.value;
	}

	public pure nothrow @property @safe @nogc uint boatVariant(uint value) {
		_boatVariant.changed = true;
		_boatVariant.value = value;
		return value;
	}

	private Changed!(bool) _rightPaddleTurning;

	public pure nothrow @property @safe @nogc bool rightPaddleTurning() {
		return _rightPaddleTurning.value;
	}

	public pure nothrow @property @safe @nogc bool rightPaddleTurning(bool value) {
		_rightPaddleTurning.changed = true;
		_rightPaddleTurning.value = value;
		return value;
	}

	private Changed!(bool) _leftPaddleTurning;

	public pure nothrow @property @safe @nogc bool leftPaddleTurning() {
		return _leftPaddleTurning.value;
	}

	public pure nothrow @property @safe @nogc bool leftPaddleTurning(bool value) {
		_leftPaddleTurning.changed = true;
		_leftPaddleTurning.value = value;
		return value;
	}

	private Changed!(sul.protocol.minecraft210.types.OptionalPosition) _beamTarget;

	public pure nothrow @property @safe @nogc sul.protocol.minecraft210.types.OptionalPosition beamTarget() {
		return _beamTarget.value;
	}

	public pure nothrow @property @safe @nogc sul.protocol.minecraft210.types.OptionalPosition beamTarget(sul.protocol.minecraft210.types.OptionalPosition value) {
		_beamTarget.changed = true;
		_beamTarget.value = value;
		return value;
	}

	private Changed!(bool) _showBottom;

	public pure nothrow @property @safe @nogc bool showBottom() {
		return _showBottom.value;
	}

	public pure nothrow @property @safe @nogc bool showBottom(bool value) {
		_showBottom.changed = true;
		_showBottom.value = value;
		return value;
	}

	private Changed!(sul.protocol.minecraft210.types.Slot) _firework;

	public pure nothrow @property @safe @nogc sul.protocol.minecraft210.types.Slot firework() {
		return _firework.value;
	}

	public pure nothrow @property @safe @nogc sul.protocol.minecraft210.types.Slot firework(sul.protocol.minecraft210.types.Slot value) {
		_firework.changed = true;
		_firework.value = value;
		return value;
	}

	private Changed!(sul.protocol.minecraft210.types.Slot) _item;

	public pure nothrow @property @safe @nogc sul.protocol.minecraft210.types.Slot item() {
		return _item.value;
	}

	public pure nothrow @property @safe @nogc sul.protocol.minecraft210.types.Slot item(sul.protocol.minecraft210.types.Slot value) {
		_item.changed = true;
		_item.value = value;
		return value;
	}

	private Changed!(uint) _rotation;

	public pure nothrow @property @safe @nogc uint rotation() {
		return _rotation.value;
	}

	public pure nothrow @property @safe @nogc uint rotation(uint value) {
		_rotation.changed = true;
		_rotation.value = value;
		return value;
	}

	private Changed!(byte) _livingFlags;

	public pure nothrow @property @safe @nogc byte livingFlags() {
		return _livingFlags.value;
	}

	public pure nothrow @property @safe @nogc byte livingFlags(byte value) {
		_livingFlags.changed = true;
		_livingFlags.value = value;
		return value;
	}

	public pure nothrow @property @safe @nogc bool handActive() {
		return (_livingFlags.value >>> 0) & 1;
	}

	public pure nothrow @property @safe @nogc bool handActive(bool value) {
		_livingFlags.changed = true;
		if(value) _livingFlags.value |= (cast(byte)true << 0);
		else _livingFlags.value &= ~(cast(byte)true << 0);
		return value;
	}

	public pure nothrow @property @safe @nogc bool offhand() {
		return (_livingFlags.value >>> 1) & 1;
	}

	public pure nothrow @property @safe @nogc bool offhand(bool value) {
		_livingFlags.changed = true;
		if(value) _livingFlags.value |= (cast(byte)true << 1);
		else _livingFlags.value &= ~(cast(byte)true << 1);
		return value;
	}

	private Changed!(float) _health = tuple(cast(float)1, false);

	public pure nothrow @property @safe @nogc float health() {
		return _health.value;
	}

	public pure nothrow @property @safe @nogc float health(float value) {
		_health.changed = true;
		_health.value = value;
		return value;
	}

	private Changed!(uint) _potionColor;

	public pure nothrow @property @safe @nogc uint potionColor() {
		return _potionColor.value;
	}

	public pure nothrow @property @safe @nogc uint potionColor(uint value) {
		_potionColor.changed = true;
		_potionColor.value = value;
		return value;
	}

	private Changed!(bool) _potionAmbient;

	public pure nothrow @property @safe @nogc bool potionAmbient() {
		return _potionAmbient.value;
	}

	public pure nothrow @property @safe @nogc bool potionAmbient(bool value) {
		_potionAmbient.changed = true;
		_potionAmbient.value = value;
		return value;
	}

	private Changed!(uint) _arrows;

	public pure nothrow @property @safe @nogc uint arrows() {
		return _arrows.value;
	}

	public pure nothrow @property @safe @nogc uint arrows(uint value) {
		_arrows.changed = true;
		_arrows.value = value;
		return value;
	}

	private Changed!(float) _additionalHearts = tuple(cast(float)0, false);

	public pure nothrow @property @safe @nogc float additionalHearts() {
		return _additionalHearts.value;
	}

	public pure nothrow @property @safe @nogc float additionalHearts(float value) {
		_additionalHearts.changed = true;
		_additionalHearts.value = value;
		return value;
	}

	private Changed!(uint) _score;

	public pure nothrow @property @safe @nogc uint score() {
		return _score.value;
	}

	public pure nothrow @property @safe @nogc uint score(uint value) {
		_score.changed = true;
		_score.value = value;
		return value;
	}

	private Changed!(byte) _skinParts = tuple(cast(byte)0, false);

	public pure nothrow @property @safe @nogc byte skinParts() {
		return _skinParts.value;
	}

	public pure nothrow @property @safe @nogc byte skinParts(byte value) {
		_skinParts.changed = true;
		_skinParts.value = value;
		return value;
	}

	public pure nothrow @property @safe @nogc bool cape() {
		return (_skinParts.value >>> 0) & 1;
	}

	public pure nothrow @property @safe @nogc bool cape(bool value) {
		_skinParts.changed = true;
		if(value) _skinParts.value |= (cast(byte)true << 0);
		else _skinParts.value &= ~(cast(byte)true << 0);
		return value;
	}

	public pure nothrow @property @safe @nogc bool jacket() {
		return (_skinParts.value >>> 1) & 1;
	}

	public pure nothrow @property @safe @nogc bool jacket(bool value) {
		_skinParts.changed = true;
		if(value) _skinParts.value |= (cast(byte)true << 1);
		else _skinParts.value &= ~(cast(byte)true << 1);
		return value;
	}

	public pure nothrow @property @safe @nogc bool leftSleeve() {
		return (_skinParts.value >>> 2) & 1;
	}

	public pure nothrow @property @safe @nogc bool leftSleeve(bool value) {
		_skinParts.changed = true;
		if(value) _skinParts.value |= (cast(byte)true << 2);
		else _skinParts.value &= ~(cast(byte)true << 2);
		return value;
	}

	public pure nothrow @property @safe @nogc bool rightSleeve() {
		return (_skinParts.value >>> 3) & 1;
	}

	public pure nothrow @property @safe @nogc bool rightSleeve(bool value) {
		_skinParts.changed = true;
		if(value) _skinParts.value |= (cast(byte)true << 3);
		else _skinParts.value &= ~(cast(byte)true << 3);
		return value;
	}

	public pure nothrow @property @safe @nogc bool leftPants() {
		return (_skinParts.value >>> 4) & 1;
	}

	public pure nothrow @property @safe @nogc bool leftPants(bool value) {
		_skinParts.changed = true;
		if(value) _skinParts.value |= (cast(byte)true << 4);
		else _skinParts.value &= ~(cast(byte)true << 4);
		return value;
	}

	public pure nothrow @property @safe @nogc bool rightPants() {
		return (_skinParts.value >>> 5) & 1;
	}

	public pure nothrow @property @safe @nogc bool rightPants(bool value) {
		_skinParts.changed = true;
		if(value) _skinParts.value |= (cast(byte)true << 5);
		else _skinParts.value &= ~(cast(byte)true << 5);
		return value;
	}

	public pure nothrow @property @safe @nogc bool hat() {
		return (_skinParts.value >>> 6) & 1;
	}

	public pure nothrow @property @safe @nogc bool hat(bool value) {
		_skinParts.changed = true;
		if(value) _skinParts.value |= (cast(byte)true << 6);
		else _skinParts.value &= ~(cast(byte)true << 6);
		return value;
	}

	private Changed!(byte) _mainHand = tuple(cast(byte)1, false);

	public pure nothrow @property @safe @nogc byte mainHand() {
		return _mainHand.value;
	}

	public pure nothrow @property @safe @nogc byte mainHand(byte value) {
		_mainHand.changed = true;
		_mainHand.value = value;
		return value;
	}

	private Changed!(byte) _armorStandFlags;

	public pure nothrow @property @safe @nogc byte armorStandFlags() {
		return _armorStandFlags.value;
	}

	public pure nothrow @property @safe @nogc byte armorStandFlags(byte value) {
		_armorStandFlags.changed = true;
		_armorStandFlags.value = value;
		return value;
	}

	public pure nothrow @property @safe @nogc bool isSmall() {
		return (_armorStandFlags.value >>> 0) & 1;
	}

	public pure nothrow @property @safe @nogc bool isSmall(bool value) {
		_armorStandFlags.changed = true;
		if(value) _armorStandFlags.value |= (cast(byte)true << 0);
		else _armorStandFlags.value &= ~(cast(byte)true << 0);
		return value;
	}

	public pure nothrow @property @safe @nogc bool hasArms() {
		return (_armorStandFlags.value >>> 2) & 1;
	}

	public pure nothrow @property @safe @nogc bool hasArms(bool value) {
		_armorStandFlags.changed = true;
		if(value) _armorStandFlags.value |= (cast(byte)true << 2);
		else _armorStandFlags.value &= ~(cast(byte)true << 2);
		return value;
	}

	public pure nothrow @property @safe @nogc bool noBasePlate() {
		return (_armorStandFlags.value >>> 3) & 1;
	}

	public pure nothrow @property @safe @nogc bool noBasePlate(bool value) {
		_armorStandFlags.changed = true;
		if(value) _armorStandFlags.value |= (cast(byte)true << 3);
		else _armorStandFlags.value &= ~(cast(byte)true << 3);
		return value;
	}

	public pure nothrow @property @safe @nogc bool setMarker() {
		return (_armorStandFlags.value >>> 4) & 1;
	}

	public pure nothrow @property @safe @nogc bool setMarker(bool value) {
		_armorStandFlags.changed = true;
		if(value) _armorStandFlags.value |= (cast(byte)true << 4);
		else _armorStandFlags.value &= ~(cast(byte)true << 4);
		return value;
	}

	private Changed!(Tuple!(float, "x", float, "y", float, "z")) _headRotation;

	public pure nothrow @property @safe @nogc Tuple!(float, "x", float, "y", float, "z") headRotation() {
		return _headRotation.value;
	}

	public pure nothrow @property @safe @nogc Tuple!(float, "x", float, "y", float, "z") headRotation(Tuple!(float, "x", float, "y", float, "z") value) {
		_headRotation.changed = true;
		_headRotation.value = value;
		return value;
	}

	private Changed!(Tuple!(float, "x", float, "y", float, "z")) _bodyRotation;

	public pure nothrow @property @safe @nogc Tuple!(float, "x", float, "y", float, "z") bodyRotation() {
		return _bodyRotation.value;
	}

	public pure nothrow @property @safe @nogc Tuple!(float, "x", float, "y", float, "z") bodyRotation(Tuple!(float, "x", float, "y", float, "z") value) {
		_bodyRotation.changed = true;
		_bodyRotation.value = value;
		return value;
	}

	private Changed!(Tuple!(float, "x", float, "y", float, "z")) _leftArmRotation;

	public pure nothrow @property @safe @nogc Tuple!(float, "x", float, "y", float, "z") leftArmRotation() {
		return _leftArmRotation.value;
	}

	public pure nothrow @property @safe @nogc Tuple!(float, "x", float, "y", float, "z") leftArmRotation(Tuple!(float, "x", float, "y", float, "z") value) {
		_leftArmRotation.changed = true;
		_leftArmRotation.value = value;
		return value;
	}

	private Changed!(Tuple!(float, "x", float, "y", float, "z")) _rightArmRotation;

	public pure nothrow @property @safe @nogc Tuple!(float, "x", float, "y", float, "z") rightArmRotation() {
		return _rightArmRotation.value;
	}

	public pure nothrow @property @safe @nogc Tuple!(float, "x", float, "y", float, "z") rightArmRotation(Tuple!(float, "x", float, "y", float, "z") value) {
		_rightArmRotation.changed = true;
		_rightArmRotation.value = value;
		return value;
	}

	private Changed!(Tuple!(float, "x", float, "y", float, "z")) _leftLegRotation;

	public pure nothrow @property @safe @nogc Tuple!(float, "x", float, "y", float, "z") leftLegRotation() {
		return _leftLegRotation.value;
	}

	public pure nothrow @property @safe @nogc Tuple!(float, "x", float, "y", float, "z") leftLegRotation(Tuple!(float, "x", float, "y", float, "z") value) {
		_leftLegRotation.changed = true;
		_leftLegRotation.value = value;
		return value;
	}

	private Changed!(Tuple!(float, "x", float, "y", float, "z")) _rightLegRotation;

	public pure nothrow @property @safe @nogc Tuple!(float, "x", float, "y", float, "z") rightLegRotation() {
		return _rightLegRotation.value;
	}

	public pure nothrow @property @safe @nogc Tuple!(float, "x", float, "y", float, "z") rightLegRotation(Tuple!(float, "x", float, "y", float, "z") value) {
		_rightLegRotation.changed = true;
		_rightLegRotation.value = value;
		return value;
	}

	private Changed!(byte) _instentientFlags;

	public pure nothrow @property @safe @nogc byte instentientFlags() {
		return _instentientFlags.value;
	}

	public pure nothrow @property @safe @nogc byte instentientFlags(byte value) {
		_instentientFlags.changed = true;
		_instentientFlags.value = value;
		return value;
	}

	public pure nothrow @property @safe @nogc bool noAi() {
		return (_instentientFlags.value >>> 0) & 1;
	}

	public pure nothrow @property @safe @nogc bool noAi(bool value) {
		_instentientFlags.changed = true;
		if(value) _instentientFlags.value |= (cast(byte)true << 0);
		else _instentientFlags.value &= ~(cast(byte)true << 0);
		return value;
	}

	public pure nothrow @property @safe @nogc bool leftHanded() {
		return (_instentientFlags.value >>> 1) & 1;
	}

	public pure nothrow @property @safe @nogc bool leftHanded(bool value) {
		_instentientFlags.changed = true;
		if(value) _instentientFlags.value |= (cast(byte)true << 1);
		else _instentientFlags.value &= ~(cast(byte)true << 1);
		return value;
	}

	private Changed!(byte) _hanging;

	public pure nothrow @property @safe @nogc byte hanging() {
		return _hanging.value;
	}

	public pure nothrow @property @safe @nogc byte hanging(byte value) {
		_hanging.changed = true;
		_hanging.value = value;
		return value;
	}

	private Changed!(bool) _baby;

	public pure nothrow @property @safe @nogc bool baby() {
		return _baby.value;
	}

	public pure nothrow @property @safe @nogc bool baby(bool value) {
		_baby.changed = true;
		_baby.value = value;
		return value;
	}

	private Changed!(byte) _horseFlags;

	public pure nothrow @property @safe @nogc byte horseFlags() {
		return _horseFlags.value;
	}

	public pure nothrow @property @safe @nogc byte horseFlags(byte value) {
		_horseFlags.changed = true;
		_horseFlags.value = value;
		return value;
	}

	public pure nothrow @property @safe @nogc bool horseTamed() {
		return (_horseFlags.value >>> 1) & 1;
	}

	public pure nothrow @property @safe @nogc bool horseTamed(bool value) {
		_horseFlags.changed = true;
		if(value) _horseFlags.value |= (cast(byte)true << 1);
		else _horseFlags.value &= ~(cast(byte)true << 1);
		return value;
	}

	public pure nothrow @property @safe @nogc bool horseSaddled() {
		return (_horseFlags.value >>> 2) & 1;
	}

	public pure nothrow @property @safe @nogc bool horseSaddled(bool value) {
		_horseFlags.changed = true;
		if(value) _horseFlags.value |= (cast(byte)true << 2);
		else _horseFlags.value &= ~(cast(byte)true << 2);
		return value;
	}

	public pure nothrow @property @safe @nogc bool horseChested() {
		return (_horseFlags.value >>> 3) & 1;
	}

	public pure nothrow @property @safe @nogc bool horseChested(bool value) {
		_horseFlags.changed = true;
		if(value) _horseFlags.value |= (cast(byte)true << 3);
		else _horseFlags.value &= ~(cast(byte)true << 3);
		return value;
	}

	public pure nothrow @property @safe @nogc bool horseEating() {
		return (_horseFlags.value >>> 5) & 1;
	}

	public pure nothrow @property @safe @nogc bool horseEating(bool value) {
		_horseFlags.changed = true;
		if(value) _horseFlags.value |= (cast(byte)true << 5);
		else _horseFlags.value &= ~(cast(byte)true << 5);
		return value;
	}

	public pure nothrow @property @safe @nogc bool horseRearing() {
		return (_horseFlags.value >>> 6) & 1;
	}

	public pure nothrow @property @safe @nogc bool horseRearing(bool value) {
		_horseFlags.changed = true;
		if(value) _horseFlags.value |= (cast(byte)true << 6);
		else _horseFlags.value &= ~(cast(byte)true << 6);
		return value;
	}

	public pure nothrow @property @safe @nogc bool mouthOpen() {
		return (_horseFlags.value >>> 7) & 1;
	}

	public pure nothrow @property @safe @nogc bool mouthOpen(bool value) {
		_horseFlags.changed = true;
		if(value) _horseFlags.value |= (cast(byte)true << 7);
		else _horseFlags.value &= ~(cast(byte)true << 7);
		return value;
	}

	private Changed!(uint) _horseVariant;

	public pure nothrow @property @safe @nogc uint horseVariant() {
		return _horseVariant.value;
	}

	public pure nothrow @property @safe @nogc uint horseVariant(uint value) {
		_horseVariant.changed = true;
		_horseVariant.value = value;
		return value;
	}

	private Changed!(uint) _ownerUuid;

	public pure nothrow @property @safe @nogc uint ownerUuid() {
		return _ownerUuid.value;
	}

	public pure nothrow @property @safe @nogc uint ownerUuid(uint value) {
		_ownerUuid.changed = true;
		_ownerUuid.value = value;
		return value;
	}

	private Changed!(uint) _horseArmor;

	public pure nothrow @property @safe @nogc uint horseArmor() {
		return _horseArmor.value;
	}

	public pure nothrow @property @safe @nogc uint horseArmor(uint value) {
		_horseArmor.changed = true;
		_horseArmor.value = value;
		return value;
	}

	private Changed!(bool) _pigSaddled;

	public pure nothrow @property @safe @nogc bool pigSaddled() {
		return _pigSaddled.value;
	}

	public pure nothrow @property @safe @nogc bool pigSaddled(bool value) {
		_pigSaddled.changed = true;
		_pigSaddled.value = value;
		return value;
	}

	private Changed!(uint) _rabbitVariant;

	public pure nothrow @property @safe @nogc uint rabbitVariant() {
		return _rabbitVariant.value;
	}

	public pure nothrow @property @safe @nogc uint rabbitVariant(uint value) {
		_rabbitVariant.changed = true;
		_rabbitVariant.value = value;
		return value;
	}

	private Changed!(bool) _standingUp;

	public pure nothrow @property @safe @nogc bool standingUp() {
		return _standingUp.value;
	}

	public pure nothrow @property @safe @nogc bool standingUp(bool value) {
		_standingUp.changed = true;
		_standingUp.value = value;
		return value;
	}

	private Changed!(byte) _sheepFlagsAndColor;

	public pure nothrow @property @safe @nogc byte sheepFlagsAndColor() {
		return _sheepFlagsAndColor.value;
	}

	public pure nothrow @property @safe @nogc byte sheepFlagsAndColor(byte value) {
		_sheepFlagsAndColor.changed = true;
		_sheepFlagsAndColor.value = value;
		return value;
	}

	public pure nothrow @property @safe @nogc bool sheared() {
		return (_sheepFlagsAndColor.value >>> 7) & 1;
	}

	public pure nothrow @property @safe @nogc bool sheared(bool value) {
		_sheepFlagsAndColor.changed = true;
		if(value) _sheepFlagsAndColor.value |= (cast(byte)true << 7);
		else _sheepFlagsAndColor.value &= ~(cast(byte)true << 7);
		return value;
	}

	private Changed!(byte) _tameableFlags;

	public pure nothrow @property @safe @nogc byte tameableFlags() {
		return _tameableFlags.value;
	}

	public pure nothrow @property @safe @nogc byte tameableFlags(byte value) {
		_tameableFlags.changed = true;
		_tameableFlags.value = value;
		return value;
	}

	public pure nothrow @property @safe @nogc bool sitting() {
		return (_tameableFlags.value >>> 0) & 1;
	}

	public pure nothrow @property @safe @nogc bool sitting(bool value) {
		_tameableFlags.changed = true;
		if(value) _tameableFlags.value |= (cast(byte)true << 0);
		else _tameableFlags.value &= ~(cast(byte)true << 0);
		return value;
	}

	public pure nothrow @property @safe @nogc bool angry() {
		return (_tameableFlags.value >>> 1) & 1;
	}

	public pure nothrow @property @safe @nogc bool angry(bool value) {
		_tameableFlags.changed = true;
		if(value) _tameableFlags.value |= (cast(byte)true << 1);
		else _tameableFlags.value &= ~(cast(byte)true << 1);
		return value;
	}

	public pure nothrow @property @safe @nogc bool tamed() {
		return (_tameableFlags.value >>> 2) & 1;
	}

	public pure nothrow @property @safe @nogc bool tamed(bool value) {
		_tameableFlags.changed = true;
		if(value) _tameableFlags.value |= (cast(byte)true << 2);
		else _tameableFlags.value &= ~(cast(byte)true << 2);
		return value;
	}

	private Changed!(uint) _ocelotVariant;

	public pure nothrow @property @safe @nogc uint ocelotVariant() {
		return _ocelotVariant.value;
	}

	public pure nothrow @property @safe @nogc uint ocelotVariant(uint value) {
		_ocelotVariant.changed = true;
		_ocelotVariant.value = value;
		return value;
	}

	private Changed!(float) _wolfHealth;

	public pure nothrow @property @safe @nogc float wolfHealth() {
		return _wolfHealth.value;
	}

	public pure nothrow @property @safe @nogc float wolfHealth(float value) {
		_wolfHealth.changed = true;
		_wolfHealth.value = value;
		return value;
	}

	private Changed!(bool) _begging;

	public pure nothrow @property @safe @nogc bool begging() {
		return _begging.value;
	}

	public pure nothrow @property @safe @nogc bool begging(bool value) {
		_begging.changed = true;
		_begging.value = value;
		return value;
	}

	private Changed!(uint) _collarColor = tuple(cast(uint)14, false);

	public pure nothrow @property @safe @nogc uint collarColor() {
		return _collarColor.value;
	}

	public pure nothrow @property @safe @nogc uint collarColor(uint value) {
		_collarColor.changed = true;
		_collarColor.value = value;
		return value;
	}

	private Changed!(uint) _profession;

	public pure nothrow @property @safe @nogc uint profession() {
		return _profession.value;
	}

	public pure nothrow @property @safe @nogc uint profession(uint value) {
		_profession.changed = true;
		_profession.value = value;
		return value;
	}

	private Changed!(byte) _createdByPlayer;

	public pure nothrow @property @safe @nogc byte createdByPlayer() {
		return _createdByPlayer.value;
	}

	public pure nothrow @property @safe @nogc byte createdByPlayer(byte value) {
		_createdByPlayer.changed = true;
		_createdByPlayer.value = value;
		return value;
	}

	private Changed!(byte) _snowmanFlags;

	public pure nothrow @property @safe @nogc byte snowmanFlags() {
		return _snowmanFlags.value;
	}

	public pure nothrow @property @safe @nogc byte snowmanFlags(byte value) {
		_snowmanFlags.changed = true;
		_snowmanFlags.value = value;
		return value;
	}

	public pure nothrow @property @safe @nogc bool pumpkinless() {
		return (_snowmanFlags.value >>> 4) & 1;
	}

	public pure nothrow @property @safe @nogc bool pumpkinless(bool value) {
		_snowmanFlags.changed = true;
		if(value) _snowmanFlags.value |= (cast(byte)true << 4);
		else _snowmanFlags.value &= ~(cast(byte)true << 4);
		return value;
	}

	private Changed!(uint) _shulkerDirection;

	public pure nothrow @property @safe @nogc uint shulkerDirection() {
		return _shulkerDirection.value;
	}

	public pure nothrow @property @safe @nogc uint shulkerDirection(uint value) {
		_shulkerDirection.changed = true;
		_shulkerDirection.value = value;
		return value;
	}

	private Changed!(sul.protocol.minecraft210.types.OptionalPosition) _shulkerAttachment;

	public pure nothrow @property @safe @nogc sul.protocol.minecraft210.types.OptionalPosition shulkerAttachment() {
		return _shulkerAttachment.value;
	}

	public pure nothrow @property @safe @nogc sul.protocol.minecraft210.types.OptionalPosition shulkerAttachment(sul.protocol.minecraft210.types.OptionalPosition value) {
		_shulkerAttachment.changed = true;
		_shulkerAttachment.value = value;
		return value;
	}

	private Changed!(byte) _shulkerShieldHeight;

	public pure nothrow @property @safe @nogc byte shulkerShieldHeight() {
		return _shulkerShieldHeight.value;
	}

	public pure nothrow @property @safe @nogc byte shulkerShieldHeight(byte value) {
		_shulkerShieldHeight.changed = true;
		_shulkerShieldHeight.value = value;
		return value;
	}

	private Changed!(byte) _blazeOnFire;

	public pure nothrow @property @safe @nogc byte blazeOnFire() {
		return _blazeOnFire.value;
	}

	public pure nothrow @property @safe @nogc byte blazeOnFire(byte value) {
		_blazeOnFire.changed = true;
		_blazeOnFire.value = value;
		return value;
	}

	private Changed!(uint) _creeperState = tuple(cast(uint)-1, false);

	public pure nothrow @property @safe @nogc uint creeperState() {
		return _creeperState.value;
	}

	public pure nothrow @property @safe @nogc uint creeperState(uint value) {
		_creeperState.changed = true;
		_creeperState.value = value;
		return value;
	}

	private Changed!(bool) _charged;

	public pure nothrow @property @safe @nogc bool charged() {
		return _charged.value;
	}

	public pure nothrow @property @safe @nogc bool charged(bool value) {
		_charged.changed = true;
		_charged.value = value;
		return value;
	}

	private Changed!(bool) _ignited;

	public pure nothrow @property @safe @nogc bool ignited() {
		return _ignited.value;
	}

	public pure nothrow @property @safe @nogc bool ignited(bool value) {
		_ignited.changed = true;
		_ignited.value = value;
		return value;
	}

	private Changed!(bool) _rectractingSpikes;

	public pure nothrow @property @safe @nogc bool rectractingSpikes() {
		return _rectractingSpikes.value;
	}

	public pure nothrow @property @safe @nogc bool rectractingSpikes(bool value) {
		_rectractingSpikes.changed = true;
		_rectractingSpikes.value = value;
		return value;
	}

	private Changed!(uint) _guardianTarget;

	public pure nothrow @property @safe @nogc uint guardianTarget() {
		return _guardianTarget.value;
	}

	public pure nothrow @property @safe @nogc uint guardianTarget(uint value) {
		_guardianTarget.changed = true;
		_guardianTarget.value = value;
		return value;
	}

	private Changed!(bool) _swingingArms;

	public pure nothrow @property @safe @nogc bool swingingArms() {
		return _swingingArms.value;
	}

	public pure nothrow @property @safe @nogc bool swingingArms(bool value) {
		_swingingArms.changed = true;
		_swingingArms.value = value;
		return value;
	}

	private Changed!(byte) _climbing;

	public pure nothrow @property @safe @nogc byte climbing() {
		return _climbing.value;
	}

	public pure nothrow @property @safe @nogc byte climbing(byte value) {
		_climbing.changed = true;
		_climbing.value = value;
		return value;
	}

	private Changed!(uint) _centerHeadTarget;

	public pure nothrow @property @safe @nogc uint centerHeadTarget() {
		return _centerHeadTarget.value;
	}

	public pure nothrow @property @safe @nogc uint centerHeadTarget(uint value) {
		_centerHeadTarget.changed = true;
		_centerHeadTarget.value = value;
		return value;
	}

	private Changed!(uint) _leftHeadTarget;

	public pure nothrow @property @safe @nogc uint leftHeadTarget() {
		return _leftHeadTarget.value;
	}

	public pure nothrow @property @safe @nogc uint leftHeadTarget(uint value) {
		_leftHeadTarget.changed = true;
		_leftHeadTarget.value = value;
		return value;
	}

	private Changed!(uint) _rightHeadTarget;

	public pure nothrow @property @safe @nogc uint rightHeadTarget() {
		return _rightHeadTarget.value;
	}

	public pure nothrow @property @safe @nogc uint rightHeadTarget(uint value) {
		_rightHeadTarget.changed = true;
		_rightHeadTarget.value = value;
		return value;
	}

	private Changed!(uint) _invulnerableTime;

	public pure nothrow @property @safe @nogc uint invulnerableTime() {
		return _invulnerableTime.value;
	}

	public pure nothrow @property @safe @nogc uint invulnerableTime(uint value) {
		_invulnerableTime.changed = true;
		_invulnerableTime.value = value;
		return value;
	}

	private Changed!(bool) _handsHeldUp;

	public pure nothrow @property @safe @nogc bool handsHeldUp() {
		return _handsHeldUp.value;
	}

	public pure nothrow @property @safe @nogc bool handsHeldUp(bool value) {
		_handsHeldUp.changed = true;
		_handsHeldUp.value = value;
		return value;
	}

	private Changed!(bool) _converting;

	public pure nothrow @property @safe @nogc bool converting() {
		return _converting.value;
	}

	public pure nothrow @property @safe @nogc bool converting(bool value) {
		_converting.changed = true;
		_converting.value = value;
		return value;
	}

	private Changed!(uint) _zombieVillagerProfession;

	public pure nothrow @property @safe @nogc uint zombieVillagerProfession() {
		return _zombieVillagerProfession.value;
	}

	public pure nothrow @property @safe @nogc uint zombieVillagerProfession(uint value) {
		_zombieVillagerProfession.changed = true;
		_zombieVillagerProfession.value = value;
		return value;
	}

	private Changed!(uint) _carriedBlock;

	public pure nothrow @property @safe @nogc uint carriedBlock() {
		return _carriedBlock.value;
	}

	public pure nothrow @property @safe @nogc uint carriedBlock(uint value) {
		_carriedBlock.changed = true;
		_carriedBlock.value = value;
		return value;
	}

	private Changed!(bool) _screaming;

	public pure nothrow @property @safe @nogc bool screaming() {
		return _screaming.value;
	}

	public pure nothrow @property @safe @nogc bool screaming(bool value) {
		_screaming.changed = true;
		_screaming.value = value;
		return value;
	}

	private Changed!(uint) _dragonPhase;

	public pure nothrow @property @safe @nogc uint dragonPhase() {
		return _dragonPhase.value;
	}

	public pure nothrow @property @safe @nogc uint dragonPhase(uint value) {
		_dragonPhase.changed = true;
		_dragonPhase.value = value;
		return value;
	}

	private Changed!(bool) _ghastAttacking;

	public pure nothrow @property @safe @nogc bool ghastAttacking() {
		return _ghastAttacking.value;
	}

	public pure nothrow @property @safe @nogc bool ghastAttacking(bool value) {
		_ghastAttacking.changed = true;
		_ghastAttacking.value = value;
		return value;
	}

	private Changed!(uint) _slimeSize = tuple(cast(uint)1, false);

	public pure nothrow @property @safe @nogc uint slimeSize() {
		return _slimeSize.value;
	}

	public pure nothrow @property @safe @nogc uint slimeSize(uint value) {
		_slimeSize.changed = true;
		_slimeSize.value = value;
		return value;
	}

	private Changed!(uint) _shakingPower;

	public pure nothrow @property @safe @nogc uint shakingPower() {
		return _shakingPower.value;
	}

	public pure nothrow @property @safe @nogc uint shakingPower(uint value) {
		_shakingPower.changed = true;
		_shakingPower.value = value;
		return value;
	}

	private Changed!(uint) _shakingDirection;

	public pure nothrow @property @safe @nogc uint shakingDirection() {
		return _shakingDirection.value;
	}

	public pure nothrow @property @safe @nogc uint shakingDirection(uint value) {
		_shakingDirection.changed = true;
		_shakingDirection.value = value;
		return value;
	}

	private Changed!(float) _shakingMultiplier = tuple(cast(float)0, false);

	public pure nothrow @property @safe @nogc float shakingMultiplier() {
		return _shakingMultiplier.value;
	}

	public pure nothrow @property @safe @nogc float shakingMultiplier(float value) {
		_shakingMultiplier.changed = true;
		_shakingMultiplier.value = value;
		return value;
	}

	private Changed!(uint) _minecartBlock;

	public pure nothrow @property @safe @nogc uint minecartBlock() {
		return _minecartBlock.value;
	}

	public pure nothrow @property @safe @nogc uint minecartBlock(uint value) {
		_minecartBlock.changed = true;
		_minecartBlock.value = value;
		return value;
	}

	private Changed!(uint) _minecartBlockPosition = tuple(cast(uint)6, false);

	public pure nothrow @property @safe @nogc uint minecartBlockPosition() {
		return _minecartBlockPosition.value;
	}

	public pure nothrow @property @safe @nogc uint minecartBlockPosition(uint value) {
		_minecartBlockPosition.changed = true;
		_minecartBlockPosition.value = value;
		return value;
	}

	private Changed!(bool) _minecartCustomBlock;

	public pure nothrow @property @safe @nogc bool minecartCustomBlock() {
		return _minecartCustomBlock.value;
	}

	public pure nothrow @property @safe @nogc bool minecartCustomBlock(bool value) {
		_minecartCustomBlock.changed = true;
		_minecartCustomBlock.value = value;
		return value;
	}

	private Changed!(bool) _furnacePowered;

	public pure nothrow @property @safe @nogc bool furnacePowered() {
		return _furnacePowered.value;
	}

	public pure nothrow @property @safe @nogc bool furnacePowered(bool value) {
		_furnacePowered.changed = true;
		_furnacePowered.value = value;
		return value;
	}

	private Changed!(string) _command;

	public pure nothrow @property @safe @nogc string command() {
		return _command.value;
	}

	public pure nothrow @property @safe @nogc string command(string value) {
		_command.changed = true;
		_command.value = value;
		return value;
	}

	private Changed!(string) _lastOutput;

	public pure nothrow @property @safe @nogc string lastOutput() {
		return _lastOutput.value;
	}

	public pure nothrow @property @safe @nogc string lastOutput(string value) {
		_lastOutput.changed = true;
		_lastOutput.value = value;
		return value;
	}

	private Changed!(uint) _fuseTime;

	public pure nothrow @property @safe @nogc uint fuseTime() {
		return _fuseTime.value;
	}

	public pure nothrow @property @safe @nogc uint fuseTime(uint value) {
		_fuseTime.changed = true;
		_fuseTime.value = value;
		return value;
	}

	public pure nothrow @safe encode(Buffer buffer) {
		with(buffer) {
			{ writeBigEndianUbyte(0); writeBigEndianUbyte(0); writeBigEndianByte(entityFlags); }
			if(this._air.changed){ writeBigEndianUbyte(1); writeBigEndianUbyte(1); writeBytes(varuint.encode(air)); }
			if(this._nametag.changed){ writeBigEndianUbyte(2); writeBigEndianUbyte(3); writeBytes(varuint.encode(cast(uint)nametag.length)); writeString(nametag); }
			if(this._showNametag.changed){ writeBigEndianUbyte(3); writeBigEndianUbyte(6); writeBigEndianBool(showNametag); }
			if(this._silent.changed){ writeBigEndianUbyte(4); writeBigEndianUbyte(6); writeBigEndianBool(silent); }
			if(this._noGravity.changed){ writeBigEndianUbyte(5); writeBigEndianUbyte(6); writeBigEndianBool(noGravity); }
			if(this._potion.changed){ writeBigEndianUbyte(6); writeBigEndianUbyte(5); potion.encode(bufferInstance); }
			if(this._spawnPosition.changed){ writeBigEndianUbyte(7); writeBigEndianUbyte(8); writeBigEndianUlong(spawnPosition); }
			if(this._radius.changed){ writeBigEndianUbyte(6); writeBigEndianUbyte(2); writeBigEndianFloat(radius); }
			if(this._color.changed){ writeBigEndianUbyte(7); writeBigEndianUbyte(1); writeBytes(varuint.encode(color)); }
			if(this._isSinglePoint.changed){ writeBigEndianUbyte(8); writeBigEndianUbyte(6); writeBigEndianBool(isSinglePoint); }
			if(this._particleId.changed){ writeBigEndianUbyte(9); writeBigEndianUbyte(1); writeBytes(varuint.encode(particleId)); }
			if(this._particleParameter1.changed){ writeBigEndianUbyte(10); writeBigEndianUbyte(1); writeBytes(varuint.encode(particleParameter1)); }
			if(this._particleParameter2.changed){ writeBigEndianUbyte(11); writeBigEndianUbyte(1); writeBytes(varuint.encode(particleParameter2)); }
			if(this._hookedEntity.changed){ writeBigEndianUbyte(6); writeBigEndianUbyte(1); writeBytes(varuint.encode(hookedEntity)); }
			if(this._arrowFlags.changed){ writeBigEndianUbyte(6); writeBigEndianUbyte(0); writeBigEndianByte(arrowFlags); }
			if(this._timeSinceLastHit.changed){ writeBigEndianUbyte(6); writeBigEndianUbyte(1); writeBytes(varuint.encode(timeSinceLastHit)); }
			if(this._forwardDirection.changed){ writeBigEndianUbyte(7); writeBigEndianUbyte(1); writeBytes(varuint.encode(forwardDirection)); }
			if(this._damageTaken.changed){ writeBigEndianUbyte(8); writeBigEndianUbyte(2); writeBigEndianFloat(damageTaken); }
			if(this._boatVariant.changed){ writeBigEndianUbyte(9); writeBigEndianUbyte(1); writeBytes(varuint.encode(boatVariant)); }
			if(this._rightPaddleTurning.changed){ writeBigEndianUbyte(10); writeBigEndianUbyte(6); writeBigEndianBool(rightPaddleTurning); }
			if(this._leftPaddleTurning.changed){ writeBigEndianUbyte(11); writeBigEndianUbyte(6); writeBigEndianBool(leftPaddleTurning); }
			if(this._beamTarget.changed){ writeBigEndianUbyte(6); writeBigEndianUbyte(9); beamTarget.encode(bufferInstance); }
			if(this._showBottom.changed){ writeBigEndianUbyte(7); writeBigEndianUbyte(6); writeBigEndianBool(showBottom); }
			if(this._firework.changed){ writeBigEndianUbyte(6); writeBigEndianUbyte(5); firework.encode(bufferInstance); }
			if(this._item.changed){ writeBigEndianUbyte(6); writeBigEndianUbyte(5); item.encode(bufferInstance); }
			if(this._rotation.changed){ writeBigEndianUbyte(7); writeBigEndianUbyte(1); writeBytes(varuint.encode(rotation)); }
			if(this._livingFlags.changed){ writeBigEndianUbyte(6); writeBigEndianUbyte(0); writeBigEndianByte(livingFlags); }
			if(this._health.changed){ writeBigEndianUbyte(7); writeBigEndianUbyte(2); writeBigEndianFloat(health); }
			if(this._potionColor.changed){ writeBigEndianUbyte(8); writeBigEndianUbyte(1); writeBytes(varuint.encode(potionColor)); }
			if(this._potionAmbient.changed){ writeBigEndianUbyte(9); writeBigEndianUbyte(6); writeBigEndianBool(potionAmbient); }
			if(this._arrows.changed){ writeBigEndianUbyte(10); writeBigEndianUbyte(1); writeBytes(varuint.encode(arrows)); }
			if(this._additionalHearts.changed){ writeBigEndianUbyte(11); writeBigEndianUbyte(2); writeBigEndianFloat(additionalHearts); }
			if(this._score.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(1); writeBytes(varuint.encode(score)); }
			if(this._skinParts.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(0); writeBigEndianByte(skinParts); }
			if(this._mainHand.changed){ writeBigEndianUbyte(14); writeBigEndianUbyte(0); writeBigEndianByte(mainHand); }
			if(this._armorStandFlags.changed){ writeBigEndianUbyte(11); writeBigEndianUbyte(0); writeBigEndianByte(armorStandFlags); }
			if(this._headRotation.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(7); writeBigEndianFloat(headRotation.x); writeBigEndianFloat(headRotation.y); writeBigEndianFloat(headRotation.z); }
			if(this._bodyRotation.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(7); writeBigEndianFloat(bodyRotation.x); writeBigEndianFloat(bodyRotation.y); writeBigEndianFloat(bodyRotation.z); }
			if(this._leftArmRotation.changed){ writeBigEndianUbyte(14); writeBigEndianUbyte(7); writeBigEndianFloat(leftArmRotation.x); writeBigEndianFloat(leftArmRotation.y); writeBigEndianFloat(leftArmRotation.z); }
			if(this._rightArmRotation.changed){ writeBigEndianUbyte(15); writeBigEndianUbyte(7); writeBigEndianFloat(rightArmRotation.x); writeBigEndianFloat(rightArmRotation.y); writeBigEndianFloat(rightArmRotation.z); }
			if(this._leftLegRotation.changed){ writeBigEndianUbyte(16); writeBigEndianUbyte(7); writeBigEndianFloat(leftLegRotation.x); writeBigEndianFloat(leftLegRotation.y); writeBigEndianFloat(leftLegRotation.z); }
			if(this._rightLegRotation.changed){ writeBigEndianUbyte(17); writeBigEndianUbyte(7); writeBigEndianFloat(rightLegRotation.x); writeBigEndianFloat(rightLegRotation.y); writeBigEndianFloat(rightLegRotation.z); }
			if(this._instentientFlags.changed){ writeBigEndianUbyte(11); writeBigEndianUbyte(0); writeBigEndianByte(instentientFlags); }
			if(this._hanging.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(0); writeBigEndianByte(hanging); }
			if(this._baby.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(6); writeBigEndianBool(baby); }
			if(this._horseFlags.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(0); writeBigEndianByte(horseFlags); }
			if(this._horseVariant.changed){ writeBigEndianUbyte(14); writeBigEndianUbyte(1); writeBytes(varuint.encode(horseVariant)); }
			if(this._ownerUuid.changed){ writeBigEndianUbyte(15); writeBigEndianUbyte(1); writeBytes(varuint.encode(ownerUuid)); }
			if(this._horseArmor.changed){ writeBigEndianUbyte(16); writeBigEndianUbyte(1); writeBytes(varuint.encode(horseArmor)); }
			if(this._pigSaddled.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(6); writeBigEndianBool(pigSaddled); }
			if(this._rabbitVariant.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(1); writeBytes(varuint.encode(rabbitVariant)); }
			if(this._standingUp.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(6); writeBigEndianBool(standingUp); }
			if(this._sheepFlagsAndColor.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(0); writeBigEndianByte(sheepFlagsAndColor); }
			if(this._tameableFlags.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(0); writeBigEndianByte(tameableFlags); }
			if(this._ocelotVariant.changed){ writeBigEndianUbyte(15); writeBigEndianUbyte(1); writeBytes(varuint.encode(ocelotVariant)); }
			if(this._wolfHealth.changed){ writeBigEndianUbyte(15); writeBigEndianUbyte(2); writeBigEndianFloat(wolfHealth); }
			if(this._begging.changed){ writeBigEndianUbyte(16); writeBigEndianUbyte(6); writeBigEndianBool(begging); }
			if(this._collarColor.changed){ writeBigEndianUbyte(17); writeBigEndianUbyte(1); writeBytes(varuint.encode(collarColor)); }
			if(this._profession.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(1); writeBytes(varuint.encode(profession)); }
			if(this._createdByPlayer.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(0); writeBigEndianByte(createdByPlayer); }
			if(this._snowmanFlags.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(0); writeBigEndianByte(snowmanFlags); }
			if(this._shulkerDirection.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(10); writeBytes(varuint.encode(shulkerDirection)); }
			if(this._shulkerAttachment.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(9); shulkerAttachment.encode(bufferInstance); }
			if(this._shulkerShieldHeight.changed){ writeBigEndianUbyte(14); writeBigEndianUbyte(0); writeBigEndianByte(shulkerShieldHeight); }
			if(this._blazeOnFire.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(0); writeBigEndianByte(blazeOnFire); }
			if(this._creeperState.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(1); writeBytes(varuint.encode(creeperState)); }
			if(this._charged.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(6); writeBigEndianBool(charged); }
			if(this._ignited.changed){ writeBigEndianUbyte(14); writeBigEndianUbyte(6); writeBigEndianBool(ignited); }
			if(this._rectractingSpikes.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(6); writeBigEndianBool(rectractingSpikes); }
			if(this._guardianTarget.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(1); writeBytes(varuint.encode(guardianTarget)); }
			if(this._swingingArms.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(6); writeBigEndianBool(swingingArms); }
			if(this._climbing.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(0); writeBigEndianByte(climbing); }
			if(this._centerHeadTarget.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(1); writeBytes(varuint.encode(centerHeadTarget)); }
			if(this._leftHeadTarget.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(1); writeBytes(varuint.encode(leftHeadTarget)); }
			if(this._rightHeadTarget.changed){ writeBigEndianUbyte(14); writeBigEndianUbyte(1); writeBytes(varuint.encode(rightHeadTarget)); }
			if(this._invulnerableTime.changed){ writeBigEndianUbyte(15); writeBigEndianUbyte(1); writeBytes(varuint.encode(invulnerableTime)); }
			if(this._handsHeldUp.changed){ writeBigEndianUbyte(14); writeBigEndianUbyte(6); writeBigEndianBool(handsHeldUp); }
			if(this._converting.changed){ writeBigEndianUbyte(15); writeBigEndianUbyte(6); writeBigEndianBool(converting); }
			if(this._zombieVillagerProfession.changed){ writeBigEndianUbyte(16); writeBigEndianUbyte(1); writeBytes(varuint.encode(zombieVillagerProfession)); }
			if(this._carriedBlock.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(12); writeBytes(varuint.encode(carriedBlock)); }
			if(this._screaming.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(6); writeBigEndianBool(screaming); }
			if(this._dragonPhase.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(1); writeBytes(varuint.encode(dragonPhase)); }
			if(this._ghastAttacking.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(6); writeBigEndianBool(ghastAttacking); }
			if(this._slimeSize.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(1); writeBytes(varuint.encode(slimeSize)); }
			if(this._shakingPower.changed){ writeBigEndianUbyte(6); writeBigEndianUbyte(1); writeBytes(varuint.encode(shakingPower)); }
			if(this._shakingDirection.changed){ writeBigEndianUbyte(7); writeBigEndianUbyte(1); writeBytes(varuint.encode(shakingDirection)); }
			if(this._shakingMultiplier.changed){ writeBigEndianUbyte(8); writeBigEndianUbyte(2); writeBigEndianFloat(shakingMultiplier); }
			if(this._minecartBlock.changed){ writeBigEndianUbyte(9); writeBigEndianUbyte(1); writeBytes(varuint.encode(minecartBlock)); }
			if(this._minecartBlockPosition.changed){ writeBigEndianUbyte(10); writeBigEndianUbyte(1); writeBytes(varuint.encode(minecartBlockPosition)); }
			if(this._minecartCustomBlock.changed){ writeBigEndianUbyte(11); writeBigEndianUbyte(6); writeBigEndianBool(minecartCustomBlock); }
			if(this._furnacePowered.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(6); writeBigEndianBool(furnacePowered); }
			if(this._command.changed){ writeBigEndianUbyte(12); writeBigEndianUbyte(3); writeBytes(varuint.encode(cast(uint)command.length)); writeString(command); }
			if(this._lastOutput.changed){ writeBigEndianUbyte(13); writeBigEndianUbyte(4); writeBytes(varuint.encode(cast(uint)lastOutput.length)); writeString(lastOutput); }
			if(this._fuseTime.changed){ writeBigEndianUbyte(6); writeBigEndianUbyte(1); writeBytes(varuint.encode(fuseTime)); }
			writeBigEndianUbyte(255);
		}
	}

}
