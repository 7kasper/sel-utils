/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/minecraft109.xml
 */
package sul.protocol.minecraft109.clientbound;

import sul.utils.*;

public class UpdateHealth extends Packet {

	public final static int ID = (int)62;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = false;

	public float health;
	public int hunger;
	public float saturation;

	public UpdateHealth() {}

	public UpdateHealth(float health, int hunger, float saturation) {
		this.health = health;
		this.hunger = hunger;
		this.saturation = saturation;
	}

	@Override
	public int length() {
		return Var.Uint.length() + Var.Uint.length(hunger) + 8;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeVaruint(ID);
		this.writeBigEndianFloat(health);
		this.writeVaruint(hunger);
		this.writeBigEndianFloat(saturation);
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		varuint.decode(_buffer, _index);
		health=readBigEndianFloat();
		hunger=varuint.decode(_buffer, _index);
		saturation=readBigEndianFloat();
	}

	public static UpdateHealth fromBuffer(byte[] buffer) {
		UpdateHealth ret = new UpdateHealth();
		ret.decode(buffer);
		return ret;
	}

}
