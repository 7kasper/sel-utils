/*
 * This file has been automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generator: https://github.com/sel-project/sel-utils/blob/master/xml/protocol/externalconsole1.xml
 */
package sul.protocol.externalconsole1.connected;

import java.util.UUID;

import sul.protocol.externalconsole1.types.*;
import sul.utils.*;

/**
 * Executes a command remotely if the server allows it. If not a Permission Denied
 * is sent back. The ideal client should never send this packet if remoteCommands field
 * in Welcome.Accepted is not true.
 */
class Command extends Packet {

	public final static byte ID = (byte)4;

	public final static boolean CLIENTBOUND = false;
	public final static boolean SERVERBOUND = true;

	/**
	 * Command to execute on the server. On servers that based on the hub-node structure
	 * it should start with a slash or a point (hub command) or a node name followed by
	 * the command (node command).
	 */
	public String command;

	@Override
	public int length() {
	}

	@Override
	public byte[] encode() {
		this.buffer = new byte[this.length()];
		this.index = 0;
		this.writeByteB(ID);
		byte[] y29tbwfuza=command.getBytes("UTF-8"); this.writeShortB((short)y29tbwfuza.length); this.writeBytes(y29tbwfuza);
		return this.buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this.buffer = buffer;
		this.index = 0;
	}

}
