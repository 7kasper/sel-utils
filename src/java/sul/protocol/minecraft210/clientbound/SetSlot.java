/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/minecraft210.xml
 */
package sul.protocol.minecraft210.clientbound;

import sul.protocol.minecraft210.types.*;
import sul.utils.*;

public class SetSlot extends Packet {

	public final static int ID = (int)22;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = false;

	public byte window;
	public short slot;
	public Slot item;

	public SetSlot() {}

	public SetSlot(byte window, short slot, Slot item) {
		this.window = window;
		this.slot = slot;
		this.item = item;
	}

	@Override
	public int length() {
		return Var.Uint.length() + item.length() + 3;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeVaruint(ID);
		this.writeBigEndianByte(window);
		this.writeBigEndianShort(slot);
		this.writeBytes(item.encode());
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		varuint.decode(_buffer, _index);
		window=readBigEndianByte();
		slot=readBigEndianShort();
		item=new Slot(); item._index=this._index; item.decode(this._buffer); this._index=item._index;
	}

	public static SetSlot fromBuffer(byte[] buffer) {
		SetSlot ret = new SetSlot();
		ret.decode(buffer);
		return ret;
	}

}
