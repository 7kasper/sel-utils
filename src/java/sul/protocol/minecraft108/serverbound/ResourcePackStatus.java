/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/minecraft108.xml
 */
package sul.protocol.minecraft108.serverbound;

import java.nio.charset.StandardCharsets;

import sul.utils.*;

public class ResourcePackStatus extends Packet {

	public final static int ID = (int)22;

	public final static boolean CLIENTBOUND = false;
	public final static boolean SERVERBOUND = true;

	// result
	public final static int LOADED = 0;
	public final static int DECLINED = 1;
	public final static int FAILED = 2;
	public final static int ACCEPTED = 3;

	public String hash;
	public int result;

	public ResourcePackStatus() {}

	public ResourcePackStatus(String hash, int result) {
		this.hash = hash;
		this.result = result;
	}

	@Override
	public int length() {
		return Buffer.varuintLength(ID) + Buffer.varuintLength(hash.getBytes(StandardCharsets.UTF_8).length) + hash.getBytes(StandardCharsets.UTF_8).length + Buffer.varuintLength(result);
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeVaruint(ID);
		byte[] agfzaa=hash.getBytes(StandardCharsets.UTF_8); this.writeVaruint((int)agfzaa.length); this.writeBytes(agfzaa);
		this.writeVaruint(result);
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		this.readVaruint();
		int bgvuagfzaa=this.readVaruint(); hash=new String(this.readBytes(bgvuagfzaa), StandardCharsets.UTF_8);
		result=this.readVaruint();
	}

	public static ResourcePackStatus fromBuffer(byte[] buffer) {
		ResourcePackStatus ret = new ResourcePackStatus();
		ret.decode(buffer);
		return ret;
	}

}
