/*
 * This file has been automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generator: https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket100.xml
 */
package sul.protocol.pocket100.play;

import java.util.UUID;

import sul.protocol.pocket100.types.*;
import sul.utils.*;

class AdventureSettings extends Packet {

	public final static byte ID = (byte)55;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = true;

	// flags
	public final static int IMMUTABLE_WORLD = (int)1;
	public final static int PVP_DISABLED = (int)2;
	public final static int PVM_DISABLED = (int)4;
	public final static int MVP_DISBALED = (int)8;
	public final static int EVP_DISABLED = (int)16;
	public final static int AUTO_JUMP = (int)32;
	public final static int ALLOW_FLIGHT = (int)64;
	public final static int NO_CLIP = (int)256;
	public final static int FLYING = (int)1024;

	// permissions
	public final static int USER = (int)0;
	public final static int OPERATOR = (int)1;
	public final static int HOST = (int)2;
	public final static int AUTOMATION = (int)3;
	public final static int ADMIN = (int)4;

	public int flags;
	public int permissions;

	@Override
	public int length() {
		return Var.Uint.length(flags) + Var.Uint.length(permissions);
	}

	@Override
	public byte[] encode() {
	}

	@Override
	public void decode(byte[] buffer) {
	}

}
