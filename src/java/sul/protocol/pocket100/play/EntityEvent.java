/*
 * This file has been automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generator: https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket100.xml
 */
package sul.protocol.pocket100.play;

import java.util.UUID;

import sul.protocol.pocket100.types.*;
import sul.utils.*;

class EntityEvent extends Packet {

	public final static byte ID = (byte)29;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = true;

	// event id
	public static immutable byte HURT_ANIMATION = 2;
	public static immutable byte DEATH_ANIMATION = 3;
	public static immutable byte TAME_FAIL = 6;
	public static immutable byte TAME_SUCCESS = 7;
	public static immutable byte SHAKE_WET = 8;
	public static immutable byte USE_ITEM = 9;
	public static immutable byte EAT_GRASS_ANIMATION = 10;
	public static immutable byte FISH_HOOK_BUBBLES = 11;
	public static immutable byte FISH_HOOK_POSITION = 12;
	public static immutable byte FISH_HOOK_HOOK = 13;
	public static immutable byte FISH_HOOK_TEASE = 14;
	public static immutable byte SQUID_INK_CLOUD = 15;
	public static immutable byte AMBIENT_SOUND = 16;
	public static immutable byte RESPAWN = 17;

	public long entityId;
	public byte eventId;
	public int unknown2;

	@Override
	public int length() {
	}

	@Override
	public byte[] encode() {
		this.buffer = new byte[this.length()];
		this.index = 0;
		this.writeByteB(ID);
		this.writeVarlong(entityId);
		this.writeByteB(eventId);
		this.writeVarint(unknown2);
		return this.buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this.buffer = buffer;
		this.index = 0;
	}

}
