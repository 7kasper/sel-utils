/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket100.xml
 */
package sul.protocol.pocket100.play;

import sul.protocol.pocket100.types.*;
import sul.utils.*;

public class UpdateAttributes extends Packet {

	public final static byte ID = (byte)31;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = false;

	public long entityId;
	public Attribute[] attributes;

	public UpdateAttributes() {}

	public UpdateAttributes(long entityId, Attribute[] attributes) {
		this.entityId = entityId;
		this.attributes = attributes;
	}

	@Override
	public int length() {
		int length=Var.Long.length(entityId) + Var.Uint.length(attributes.length) + 1; for(Attribute yxr0cmlidxrlcw:attributes){ length+=yxr0cmlidxrlcw.length(); } return length;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeBigEndianByte(ID);
		this.writeVarlong(entityId);
		this.writeVaruint((int)attributes.length); for(Attribute yxr0cmlidxrlcw:attributes){ this.writeBytes(yxr0cmlidxrlcw.encode()); }
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		readBigEndianByte();
		entityId=varlong.decode(_buffer, _index);
		int bgf0dhjpynv0zxm=varuint.decode(_buffer, _index); attributes=new Attribute[bgf0dhjpynv0zxm]; for(int yxr0cmlidxrlcw=0;yxr0cmlidxrlcw<attributes.length;yxr0cmlidxrlcw++){ attributes[yxr0cmlidxrlcw]=new Attribute(); attributes[yxr0cmlidxrlcw]._index=this._index; attributes[yxr0cmlidxrlcw].decode(this._buffer); this._index=attributes[yxr0cmlidxrlcw]._index; }
	}

	public static UpdateAttributes fromBuffer(byte[] buffer) {
		UpdateAttributes ret = new UpdateAttributes();
		ret.decode(buffer);
		return ret;
	}

}
