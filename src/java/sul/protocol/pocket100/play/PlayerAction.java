/*
 * This file has been automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generator: https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket100.xml
 */
package sul.protocol.pocket100.play;

import java.util.UUID;

import sul.protocol.pocket100.types.*;
import sul.utils.*;

class PlayerAction extends Packet {

	public final static byte ID = (byte)36;

	public final static boolean CLIENTBOUND = false;
	public final static boolean SERVERBOUND = true;

	// action
	public static immutable int START_BREAK = 0;
	public static immutable int ABORT_BREAK = 1;
	public static immutable int STOP_BREAK = 2;
	public static immutable int RELEASE_ITEM = 5;
	public static immutable int STOP_SLEEPING = 6;
	public static immutable int RESPAWN = 7;
	public static immutable int JUMP = 8;
	public static immutable int START_SPRINT = 9;
	public static immutable int STOP_SPRINT = 10;
	public static immutable int START_SNEAK = 11;
	public static immutable int STOP_SNEAK = 12;
	public static immutable int DIMENSION_CHANGE = 13;
	public static immutable int ABORT_DIMENSION_CHANGE = 14;
	public static immutable int START_GLIDING = 15;
	public static immutable int STOP_GLIDING = 16;

	public long entityId;
	public int action;
	public BlockPosition position;
	public int face;

	@Override
	public int length() {
	}

	@Override
	public byte[] encode() {
		this.buffer = new byte[this.length()];
		this.index = 0;
		this.writeByteB(ID);
		this.writeVarlong(entityId);
		this.writeVarint(action);
		this.writeBytes(position.encode());
		this.writeVarint(face);
		return this.buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this.buffer = buffer;
		this.index = 0;
	}

}
