/*
 * This file has been automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generator: https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket100.xml
 */
package sul.protocol.pocket100.play;

import java.util.UUID;

import sul.protocol.pocket100.types.*;
import sul.utils.*;

class PlayerAction extends Packet {

	public final static byte ID = (byte)36;

	public final static boolean CLIENTBOUND = false;
	public final static boolean SERVERBOUND = true;

	// action
	public final static int START_BREAK = (int)0;
	public final static int ABORT_BREAK = (int)1;
	public final static int STOP_BREAK = (int)2;
	public final static int RELEASE_ITEM = (int)5;
	public final static int STOP_SLEEPING = (int)6;
	public final static int RESPAWN = (int)7;
	public final static int JUMP = (int)8;
	public final static int START_SPRINT = (int)9;
	public final static int STOP_SPRINT = (int)10;
	public final static int START_SNEAK = (int)11;
	public final static int STOP_SNEAK = (int)12;
	public final static int DIMENSION_CHANGE = (int)13;
	public final static int ABORT_DIMENSION_CHANGE = (int)14;
	public final static int START_GLIDING = (int)15;
	public final static int STOP_GLIDING = (int)16;

	public long entityId;
	public int action;
	public BlockPosition position;
	public int face;

	@Override
	public int length() {
		return Var.Long.length(entity_id) + Var.Int.length(action) + position.length() + Var.Int.length(face);
	}

	@Override
	public byte[] encode() {
	}

	@Override
	public void decode(byte[] buffer) {
	}

}
