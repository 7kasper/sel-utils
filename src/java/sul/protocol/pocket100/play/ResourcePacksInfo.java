/*
 * This file has been automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generator: https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket100.xml
 */
package sul.protocol.pocket100.play;

import java.util.UUID;

import sul.protocol.pocket100.types.*;
import sul.utils.*;

class ResourcePacksInfo extends Packet {

	public final static byte ID = (byte)7;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = false;

	public boolean mustAccept;
	public Pack[] behaviourPacks;
	public Pack[] resourcePacks;

	@Override
	public int length() {
	}

	@Override
	public byte[] encode() {
		this.buffer = new byte[this.length()];
		this.index = 0;
		this.writeByteB(ID);
		this.writeBoolB(mustAccept);
		this.writeVaruint((int)behaviourPacks.length); for(pack ymvoyxzpb3vyugfj:behaviourPacks){ this.writeBytes(ymvoyxzpb3vyugfj.encode()); }
		this.writeVaruint((int)resourcePacks.length); for(pack cmvzb3vyy2vqywnr:resourcePacks){ this.writeBytes(cmvzb3vyy2vqywnr.encode()); }
		return this.buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this.buffer = buffer;
		this.index = 0;
	}

}
