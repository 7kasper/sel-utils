/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket100.xml
 */
package sul.protocol.pocket100.play;

import sul.utils.*;

public class LevelEvent extends Packet {

	public final static byte ID = (byte)27;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = false;

	// event id
	public final static int START_RAIN = 3001;
	public final static int START_THUNDER = 3002;
	public final static int STOP_RAIN = 3003;
	public final static int STOP_THUNDER = 3004;
	public final static int SET_DATA = 4000;
	public final static int PLAYERS_SLEEPING = 9800;
	public final static int BUBBLE = 16385;
	public final static int CRITICAL = 16386;
	public final static int BLOCK_FORCE_FIELD = 16387;
	public final static int SMOKE = 16388;
	public final static int EXPLODE = 16389;
	public final static int EVAPORATION = 16390;
	public final static int FLAME = 16391;
	public final static int LAVA = 16392;
	public final static int LARGE_SMOKE = 16393;
	public final static int REDSTONE = 16394;
	public final static int RISING_RED_DUST = 16395;
	public final static int ITEM_BREAK = 16396;
	public final static int SNOWBALL_POOF = 16397;
	public final static int HUGE_EXPLODE = 16398;
	public final static int HUGE_EXPLODE_SEED = 16399;
	public final static int MOB_FLAME = 16400;
	public final static int HEART = 16401;
	public final static int TERRAIN = 16402;
	public final static int TOWN_AURA = 16403;
	public final static int PORTAL = 16404;
	public final static int WATER_SPLASH = 16405;
	public final static int WATER_WAKE = 16406;
	public final static int DRIP_WATER = 16407;
	public final static int DRIP_LAVA = 16408;
	public final static int FALLING_DUST = 16409;
	public final static int MOB_SPELL = 16410;
	public final static int MOB_SPELL_AMBIENT = 16411;
	public final static int MOB_SPELL_INSTANTANEOUS = 16412;
	public final static int INK = 16413;
	public final static int SLIME = 16414;
	public final static int RAIN_SPLASH = 16415;
	public final static int VILLAGER_ANGRY = 16416;
	public final static int VILLAGER_HAPPY = 16417;
	public final static int ENCHANTMENT_TABLE = 16418;
	public final static int TRACKING_EMITTER = 16419;
	public final static int NOTE = 16420;
	public final static int WITCH_SPELL = 16421;
	public final static int CARROT = 16422;
	public final static int END_ROD = 16424;
	public final static int DRAGON_BREATH = 16425;
	public final static int SHOOT = 2000;
	public final static int DESTROY = 2001;

	public int eventId;
	public Tuples.FloatXYZ position;
	public int data;

	public LevelEvent() {}

	public LevelEvent(int eventId, Tuples.FloatXYZ position, int data) {
		this.eventId = eventId;
		this.position = position;
		this.data = data;
	}

	@Override
	public int length() {
		return Var.Int.length(eventId) + position.length() + Var.Int.length(data) + 1;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeBigEndianByte(ID);
		this.writeVarint(eventId);
		this.writeLittleEndianFloat(position.x);this.writeLittleEndianFloat(position.y);this.writeLittleEndianFloat(position.z);
		this.writeVarint(data);
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		readBigEndianByte();
		eventId=varint.decode(_buffer, _index);
		position.x=readLittleEndianFloat(); position.y=readLittleEndianFloat(); position.z=readLittleEndianFloat();
		data=varint.decode(_buffer, _index);
	}

	public static LevelEvent fromBuffer(byte[] buffer) {
		LevelEvent ret = new LevelEvent();
		ret.decode(buffer);
		return ret;
	}

}
