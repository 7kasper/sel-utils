/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket100.xml
 */
package sul.protocol.pocket100.play;

import sul.utils.*;

public class RemoveEntity extends Packet {

	public final static byte ID = (byte)15;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = false;

	public long entityId;

	public RemoveEntity() {}

	public RemoveEntity(long entityId) {
		this.entityId = entityId;
	}

	@Override
	public int length() {
		return Var.Long.length(entityId) + 1;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeBigEndianByte(ID);
		this.writeVarlong(entityId);
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		readBigEndianByte();
		entityId=varlong.decode(_buffer, _index);
	}

	public static RemoveEntity fromBuffer(byte[] buffer) {
		RemoveEntity ret = new RemoveEntity();
		ret.decode(buffer);
		return ret;
	}

}
