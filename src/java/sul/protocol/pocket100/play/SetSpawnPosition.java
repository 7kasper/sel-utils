/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket100.xml
 */
package sul.protocol.pocket100.play;

import sul.protocol.pocket100.types.*;
import sul.utils.*;

public class SetSpawnPosition extends Packet {

	public final static byte ID = (byte)43;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = false;

	public int unknown0;
	public BlockPosition position;
	public boolean unknown2;

	public SetSpawnPosition() {}

	public SetSpawnPosition(int unknown0, BlockPosition position, boolean unknown2) {
		this.unknown0 = unknown0;
		this.position = position;
		this.unknown2 = unknown2;
	}

	@Override
	public int length() {
		return Var.Int.length(?) + position.length() + 2;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeBigEndianByte(ID);
		this.writeVarint(unknown0);
		this.writeBytes(position.encode());
		this._buffer[this._index++]=(byte)(unknown2?1:0);
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		readBigEndianByte();
		unknown0=varint.decode(_buffer, _index);
		position=new BlockPosition(); position._index=this._index; position.decode(this._buffer); this._index=position._index;
		unknown2=this._index<this._buffer.length&&this._buffer[this._index++]!=0;
	}

	public static SetSpawnPosition fromBuffer(byte[] buffer) {
		SetSpawnPosition ret = new SetSpawnPosition();
		ret.decode(buffer);
		return ret;
	}

}
