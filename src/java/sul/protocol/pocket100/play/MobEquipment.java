/*
 * This file has been automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generator: https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket100.xml
 */
package sul.protocol.pocket100.play;

import java.util.UUID;

import sul.protocol.pocket100.types.*;
import sul.utils.*;

/**
 * Sent when the client puts an item in its hotbar or selects a new hotbar slot.
 */
class MobEquipment extends Packet {

	public final static byte ID = (byte)32;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = true;

	public long entityId;
	public Slot item;

	/**
	 * Slot of the inventory where the item is. The hotbat slots (0-8) are not counted.
	 * 255 means that a generic empty slot has been selected.
	 */
	public byte inventorySlot;

	/**
	 * Slot of the hotbar where the item is being moved.
	 */
	public byte hotbarSlot;
	public byte unknown4;

	@Override
	public int length() {
	}

	@Override
	public byte[] encode() {
		this.buffer = new byte[this.length()];
		this.index = 0;
		this.writeByteB(ID);
		this.writeVarlong(entityId);
		this.writeBytes(item.encode());
		this.writeByteB(inventorySlot);
		this.writeByteB(hotbarSlot);
		this.writeByteB(unknown4);
		return this.buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this.buffer = buffer;
		this.index = 0;
	}

}
