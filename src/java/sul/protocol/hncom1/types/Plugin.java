/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/hncom1.xml
 */
package sul.protocol.hncom1.types;

import java.nio.charset.StandardCharsets;

import sul.utils.*;

/**
 * A plugin loaded on the node. It may be used by the hub to display the plugins loaded
 * on the server in queries.
 */
public class Plugin extends Packet {

	/**
	 * Name of the plugin.
	 */
	public String name;

	/**
	 * Version of the plugin, usually in the format `major.minor[.release] [alpha|beta]`.
	 */
	public String version;

	public Plugin() {}

	public Plugin(String name, String version) {
		this.name = name;
		this.version = version;
	}

	@Override
	public int length() {
		return Var.Uint.length(name.getBytes(StandardCharsets.UTF_8).length) + name.getBytes(StandardCharsets.UTF_8).length + Var.Uint.length(version.getBytes(StandardCharsets.UTF_8).length) + version.getBytes(StandardCharsets.UTF_8).length;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		byte[] bmftzq=name.getBytes(StandardCharsets.UTF_8); this.writeVaruint((int)bmftzq.length); this.writeBytes(bmftzq);
		byte[] dmvyc2lvbg=version.getBytes(StandardCharsets.UTF_8); this.writeVaruint((int)dmvyc2lvbg.length); this.writeBytes(dmvyc2lvbg);
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		int bgvubmftzq=varuint.decode(_buffer, _index); name=new String(this.readBytes(bgvubmftzq), StandardCharsets.UTF_8);
		int bgvudmvyc2lvbg=varuint.decode(_buffer, _index); version=new String(this.readBytes(bgvudmvyc2lvbg), StandardCharsets.UTF_8);
	}


}
