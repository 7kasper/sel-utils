/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/hncom1.xml
 */
package sul.protocol.hncom1.types;

import sul.utils.*;

/**
 * Internet protocol address. Could be either version 4 and 6.
 */
public class Address extends Packet {

	/**
	 * Bytes of the address. The length may be 4 (for ipv4 addresses) or 16 (for ipv6 addresses).
	 * The byte order is always big-endian (network order).
	 */
	public byte[] bytes;

	/**
	 * Port of the address.
	 */
	public short port;

	public Address() {}

	public Address(byte[] bytes, short port) {
		this.bytes = bytes;
		this.port = port;
	}

	@Override
	public int length() {
		return Buffer.varuintLength(bytes.length) + bytes.length + 2;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeVaruint((int)bytes.length); this.writeBytes(bytes);
		this.writeBigEndianShort(port);
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		int bgj5dgvz=this.readVaruint(); bytes=this.readBytes(bgj5dgvz);
		port=readBigEndianShort();
	}


}
