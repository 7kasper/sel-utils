/*
 * This file has been automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generator: https://github.com/sel-project/sel-utils/blob/master/xml/protocol/hncom1.xml
 */
package sul.protocol.hncom1.login;

import java.util.UUID;

import sul.protocol.hncom1.types.*;
import sul.utils.*;

/**
 * Reply always sent after the Connection packet. It indicates the status of the connection,
 * which is accepted only when every field of the packet is true.
 */
class ConnectionResponse extends Packet {

	public final static byte ID = (byte)1;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = false;

	/**
	 * Indicates whether the protocol given at Connection.protocol is equals to the server's
	 * one.
	 */
	public boolean protocolMatches;

	/**
	 * Indicates whether the name has passed the server's validation process.
	 */
	public boolean nameValid;

	/**
	 * Indicates whether the name can be used. The value is false when there's already
	 * a node connected with the same name.
	 */
	public boolean nameAccepted;

	@Override
	public int length() {
	}

	@Override
	public byte[] encode() {
		this.buffer = new byte[this.length()];
		this.index = 0;
		this.writeByteB(ID);
		this.writeBoolB(protocolMatches);
		this.writeBoolB(nameValid);
		this.writeBoolB(nameAccepted);
		return this.buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this.buffer = buffer;
		this.index = 0;
	}

}
