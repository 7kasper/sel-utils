/*
 * This file has been automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generator: https://github.com/sel-project/sel-utils/blob/master/xml/protocol/hncom1.xml
 */
package sul.protocol.hncom1.login;

import java.util.UUID;

import sul.protocol.hncom1.types.*;
import sul.utils.*;

class Info extends Packet {

	public final static byte ID = (byte)2;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = false;

	public long serverId;
	public String displayName;
	public boolean onlineMode;
	public Game[] games;
	public int online;
	public int max;
	public String language;
	public String[] acceptedLanguages;
	public String[] nodes;
	public String socialJson;
	public String additionalJson;

	@Override
	public int length() {
	}

	@Override
	public byte[] encode() {
		this.buffer = new byte[this.length()];
		this.index = 0;
		this.writeByteB(ID);
		this.writeLongB(serverId);
		byte[] ZGlzcGxheU5hbWU=displayName.getBytes("UTF-8"); this.writeVaruint((int)ZGlzcGxheU5hbWU.length); this.writeBytes(ZGlzcGxheU5hbWU);
		this.writeBoolB(onlineMode);
		this.writeVaruint((int)games.length); for(game Z2FtZXM:games){ this.writeBytes(Z2FtZXM.encode()); }
		this.writeVaruint(online);
		this.writeVaruint(max);
		byte[] bGFuZ3VhZ2U=language.getBytes("UTF-8"); this.writeVaruint((int)bGFuZ3VhZ2U.length); this.writeBytes(bGFuZ3VhZ2U);
		this.writeVaruint((int)acceptedLanguages.length); for(string YWNjZXB0ZWRMYW5n:acceptedLanguages){ byte[] WVdOalpYQjBaV1JN=YWNjZXB0ZWRMYW5n.getBytes("UTF-8"); this.writeVaruint((int)WVdOalpYQjBaV1JN.length); this.writeBytes(WVdOalpYQjBaV1JN); }
		this.writeVaruint((int)nodes.length); for(string bm9kZXM:nodes){ byte[] Ym05a1pYTQ=bm9kZXM.getBytes("UTF-8"); this.writeVaruint((int)Ym05a1pYTQ.length); this.writeBytes(Ym05a1pYTQ); }
		byte[] c29jaWFsSnNvbg=socialJson.getBytes("UTF-8"); this.writeVaruint((int)c29jaWFsSnNvbg.length); this.writeBytes(c29jaWFsSnNvbg);
		byte[] YWRkaXRpb25hbEpz=additionalJson.getBytes("UTF-8"); this.writeVaruint((int)YWRkaXRpb25hbEpz.length); this.writeBytes(YWRkaXRpb25hbEpz);
		return this.buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this.buffer = buffer;
		this.index = 0;
	}

}
