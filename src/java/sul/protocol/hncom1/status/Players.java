/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/hncom1.xml
 */
package sul.protocol.hncom1.status;

import sul.utils.*;

/**
 * Updates the number of players on the server.
 */
public class Players extends Packet {

	public final static byte ID = (byte)4;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = false;

	public int online;
	public int max;

	public Players() {}

	public Players(int online, int max) {
		this.online = online;
		this.max = max;
	}

	@Override
	public int length() {
		return Var.Uint.length(online) + Var.Uint.length(max) + 1;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeBigEndianByte(ID);
		this.writeVaruint(online);
		this.writeVaruint(max);
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		readBigEndianByte();
		online=varuint.decode(_buffer, _index);
		max=varuint.decode(_buffer, _index);
	}

	public static Players fromBuffer(byte[] buffer) {
		Players ret = new Players();
		ret.decode(buffer);
		return ret;
	}

}
