/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/minecraft110.xml
 */
package sul.protocol.minecraft110.serverbound;

import java.util.UUID;

import sul.utils.*;

public class Spectate extends Packet {

	public final static int ID = (int)27;

	public final static boolean CLIENTBOUND = false;
	public final static boolean SERVERBOUND = true;

	public UUID player;

	public Spectate() {}

	public Spectate(UUID player) {
		this.player = player;
	}

	@Override
	public int length() {
		return Var.Uint.length() + 16;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeVaruint(ID);
		this.writeBigEndianLong(player.getLeastSignificantBits()); this.writeBigEndianLong(player.getMostSignificantBits());
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		varuint.decode(_buffer, _index);
		long bxbsyxllcg=readBigEndianLong();long bhbsyxllcg=readBigEndianLong();return new UUID(bxbsyxllcg,bhbsyxllcg);
	}

	public static Spectate fromBuffer(byte[] buffer) {
		Spectate ret = new Spectate();
		ret.decode(buffer);
		return ret;
	}

}
