/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/minecraft47.xml
 */
package sul.protocol.minecraft47.serverbound;

import java.nio.charset.StandardCharsets;

import sul.utils.*;

public class ClientSettings extends Packet {

	public final static int ID = (int)21;

	public final static boolean CLIENTBOUND = false;
	public final static boolean SERVERBOUND = true;

	// chat mode
	public final static byte ENABLED = 0;
	public final static byte COMMANDS_ONLY = 1;
	public final static byte DISABLED = 2;

	// displayed skin parts
	public final static byte CAPE = 1;
	public final static byte JACKET = 2;
	public final static byte LEFT_SLEEVE = 4;
	public final static byte RIGHT_SLEEVE = 8;
	public final static byte LEFT_PANTS = 16;
	public final static byte RIGHT_PANTS = 32;
	public final static byte HAT = 64;

	// main hand
	public final static byte RIGHT = 0;
	public final static byte LEFT = 1;

	public String language;
	public byte viewDistance;
	public byte chatMode;
	public boolean chatColors;
	public byte displayedSkinParts;
	public byte mainHand;

	public ClientSettings() {}

	public ClientSettings(String language, byte viewDistance, byte chatMode, boolean chatColors, byte displayedSkinParts, byte mainHand) {
		this.language = language;
		this.viewDistance = viewDistance;
		this.chatMode = chatMode;
		this.chatColors = chatColors;
		this.displayedSkinParts = displayedSkinParts;
		this.mainHand = mainHand;
	}

	@Override
	public int length() {
		return Var.Uint.length() + Var.Uint.length(language.getBytes(StandardCharsets.UTF_8).length) + language.getBytes(StandardCharsets.UTF_8).length + 5;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeVaruint(ID);
		byte[] bgfuz3vhz2u=language.getBytes(StandardCharsets.UTF_8); this.writeVaruint((int)bgfuz3vhz2u.length); this.writeBytes(bgfuz3vhz2u);
		this.writeBigEndianByte(viewDistance);
		this.writeBigEndianByte(chatMode);
		this._buffer[this._index++]=(byte)(chatColors?1:0);
		this.writeBigEndianByte(displayedSkinParts);
		this.writeBigEndianByte(mainHand);
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		varuint.decode(_buffer, _index);
		int bgvubgfuz3vhz2u=varuint.decode(_buffer, _index); language=new String(this.readBytes(bgvubgfuz3vhz2u), StandardCharsets.UTF_8);
		viewDistance=readBigEndianByte();
		chatMode=readBigEndianByte();
		chatColors=this._index<this._buffer.length&&this._buffer[this._index++]!=0;
		displayedSkinParts=readBigEndianByte();
		mainHand=readBigEndianByte();
	}

	public static ClientSettings fromBuffer(byte[] buffer) {
		ClientSettings ret = new ClientSettings();
		ret.decode(buffer);
		return ret;
	}

}
