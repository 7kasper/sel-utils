/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/minecraft47.xml
 */
package sul.protocol.minecraft47.serverbound;

import sul.protocol.minecraft47.types.*;
import sul.utils.*;

public class CreativeInventoryAction extends Packet {

	public final static int ID = (int)16;

	public final static boolean CLIENTBOUND = false;
	public final static boolean SERVERBOUND = true;

	public short slot;
	public Slot clickedItem;

	public CreativeInventoryAction() {}

	public CreativeInventoryAction(short slot, Slot clickedItem) {
		this.slot = slot;
		this.clickedItem = clickedItem;
	}

	@Override
	public int length() {
		return Var.Uint.length() + clickedItem.length() + 2;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeVaruint(ID);
		this.writeBigEndianShort(slot);
		this.writeBytes(clickedItem.encode());
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		varuint.decode(_buffer, _index);
		slot=readBigEndianShort();
		clickedItem=new Slot(); clickedItem._index=this._index; clickedItem.decode(this._buffer); this._index=clickedItem._index;
	}

	public static CreativeInventoryAction fromBuffer(byte[] buffer) {
		CreativeInventoryAction ret = new CreativeInventoryAction();
		ret.decode(buffer);
		return ret;
	}

}
