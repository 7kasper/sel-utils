/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/minecraft47.xml
 */
package sul.protocol.minecraft47.clientbound;

import sul.utils.*;

public class EntityEffect extends Packet {

	public final static int ID = (int)29;

	public final static boolean CLIENTBOUND = true;
	public final static boolean SERVERBOUND = false;

	public int entityId;
	public byte effectId;
	public byte amplifier;
	public int duration;
	public boolean hideParticles;

	public EntityEffect() {}

	public EntityEffect(int entityId, byte effectId, byte amplifier, int duration, boolean hideParticles) {
		this.entityId = entityId;
		this.effectId = effectId;
		this.amplifier = amplifier;
		this.duration = duration;
		this.hideParticles = hideParticles;
	}

	@Override
	public int length() {
		return Var.Uint.length() + Var.Uint.length(entityId) + Var.Uint.length(duration) + 3;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeVaruint(ID);
		this.writeVaruint(entityId);
		this.writeBigEndianByte(effectId);
		this.writeBigEndianByte(amplifier);
		this.writeVaruint(duration);
		this._buffer[this._index++]=(byte)(hideParticles?1:0);
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		varuint.decode(_buffer, _index);
		entityId=varuint.decode(_buffer, _index);
		effectId=readBigEndianByte();
		amplifier=readBigEndianByte();
		duration=varuint.decode(_buffer, _index);
		hideParticles=this._index<this._buffer.length&&this._buffer[this._index++]!=0;
	}

	public static EntityEffect fromBuffer(byte[] buffer) {
		EntityEffect ret = new EntityEffect();
		ret.decode(buffer);
		return ret;
	}

}
