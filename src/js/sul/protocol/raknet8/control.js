/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/raknet8.xml
 */
/** @module sul/protocol/raknet8/control */

//import Types from 'types';

const Control = {

	Ack: class extends Buffer {

		static get ID(){ return 192; }

		static get CLIENTBOUND(){ return true; }
		static get SERVERBOUND(){ return true; }

		constructor(packets=[]) {
			super();
			this.packets = packets;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeBigEndianByte(192);
			this.writeBigEndianShort(this.packets.length); for(var dghpcy5wywnrzxrz in this.packets){ this.writeBytes(this.packets[dghpcy5wywnrzxrz].encode()); }
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			this._index = 0;
			var _id=this.readBigEndianByte();
			var bhroaxmucgfja2v0=this.readBigEndianShort(); this.packets=[]; for(var dghpcy5wywnrzxrz in this.packets){ this.packets[dghpcy5wywnrzxrz]=Types.Acknowledge.fromBuffer(this._buffer); this._buffer=this.packets[dghpcy5wywnrzxrz]._buffer; }
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Control.Ack().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Ack(packets: " + this.packets + ")";
		}

	},

	Nack: class extends Buffer {

		static get ID(){ return 160; }

		static get CLIENTBOUND(){ return true; }
		static get SERVERBOUND(){ return true; }

		constructor(packets=[]) {
			super();
			this.packets = packets;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeBigEndianByte(160);
			this.writeBigEndianShort(this.packets.length); for(var dghpcy5wywnrzxrz in this.packets){ this.writeBytes(this.packets[dghpcy5wywnrzxrz].encode()); }
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			this._index = 0;
			var _id=this.readBigEndianByte();
			var bhroaxmucgfja2v0=this.readBigEndianShort(); this.packets=[]; for(var dghpcy5wywnrzxrz in this.packets){ this.packets[dghpcy5wywnrzxrz]=Types.Acknowledge.fromBuffer(this._buffer); this._buffer=this.packets[dghpcy5wywnrzxrz]._buffer; }
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Control.Nack().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Nack(packets: " + this.packets + ")";
		}

	},

	Encapsulated: class extends Buffer {

		static get ID(){ return 132; }

		static get CLIENTBOUND(){ return true; }
		static get SERVERBOUND(){ return true; }

		constructor(count=0, encapsulation=null) {
			super();
			this.count = count;
			this.encapsulation = encapsulation;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeBigEndianByte(132);
			this.writeLittleEndianTriad(this.count);
			this.writeBytes(this.encapsulation.encode());
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			this._index = 0;
			var _id=this.readBigEndianByte();
			this.count=this.readLittleEndianTriad();
			this.encapsulation=Types.Encapsulation.fromBuffer(this._buffer); this._buffer=this.encapsulation._buffer;
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Control.Encapsulated().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Encapsulated(count: " + this.count + ", encapsulation: " + this.encapsulation + ")";
		}

	},

}

//export { Control };
