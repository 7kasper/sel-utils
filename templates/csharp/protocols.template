--- start protocols ---
{{types}}
{{section@SECTIONS}}
--- end ---
--- start types Protocol/{{GAME:pascal_case}}/Types.cs ---
using System.Text;

namespace sul.{{GAME:pascal_case}}.Types
{

{{type@1,TYPES}}
}
--- end ---
--- start section Protocol/{{GAME:pascal_case}}/{{NAME:pascal_case}}.cs ---
using System.Text;

using sul.Utils;
using sul.{{GAME:pascal_case}}.Types;

namespace sul.{{GAME:pascal_case}}.{{NAME:pascal_case}}
{
	
{{packets@1,PACKETS}}
}
--- end ---
--- start type ---
public class {{NAME:pascal_case}} : sul.Utils.{{IS_LENGTH_PREFIXED==true?LengthPrefixedType}}{{IS_LENGTH_PREFIXED==false?Stream}}
{ {{constants@FIELDS}}

{{fields@1,FIELDS}}

	{{HAS_FIELDS==true?public {{NAME:pascal_case}}() : this({{default_ctor@FIELDS}}) {}

	}}public {{NAME:pascal_case}}({{constructor@FIELDS}})
	{
{{constructor_assign@2,FIELDS}}
	}{{IS_LENGTH_PREFIXED==true?

	protected override void EncodeLength(int length, sul.Utils.Buffer _buffer)
	{
		{{LENGTH_ENCODE}}
	}

	protected override int DecodeLength(sul.Utils.Buffer _buffer)
	{
		return (int){{LENGTH_DECODE}}
	\}}}

	protected override void EncodeImpl(sul.Utils.Buffer _buffer)
	{
{{encode@2,FIELDS}}
	}

	protected override void DecodeImpl(sul.Utils.Buffer _buffer)
	{
{{decode@2,FIELDS}}
	}

}

--- end ---
--- start packets ---
public class {{NAME:pascal_case}} : sul.Utils.Packet
{

	public const {{ID_TYPE_ENCODED}} Id = {{ID}};

	public const bool Clientbound = {{CLIENTBOUND}};
	public const bool Serverbound = {{SERVERBOUND}};{{constants@FIELDS}}

{{fields@1,FIELDS}}

	{{HAS_FIELDS==true?public {{NAME:pascal_case}}() : this({{default_ctor@FIELDS}}) {}
	
	}}public {{NAME:pascal_case}}({{constructor@FIELDS}})
	{
{{constructor_assign@2,FIELDS}}
	}

	public override int GetId()
	{
		return (int)Id;
	}

	protected override void EncodeId(sul.Utils.Buffer _buffer)
	{
		_buffer.Write{{ENDIANNESS:pascal_case}}{{ID_TYPE:pascal_case}}(Id);
	}

	protected override void DecodeId(sul.Utils.Buffer _buffer)
	{
		//_buffer.Read{{ENDIANNESS:pascal_case}}{{ID_TYPE:pascal_case}}();
	}

	protected override void EncodeImpl(sul.Utils.Buffer _buffer)
	{
{{encode@2,FIELDS}}
	}

	protected override void DecodeImpl(sul.Utils.Buffer _buffer)
	{
{{decode@2,FIELDS}}
	}

	public static {{NAME:pascal_case}} FromBuffer(byte[] buffer)
	{
		var ret = new {{NAME:pascal_case}}();
		ret.Decode(buffer);
		return ret;
	}

}

--- end ---
--- start constants inline ---
{{HAS_CONSTANTS==true?

		// {{ORIGINAL_NAME:spaced}}
{{constants_impl@1,CONSTANTS}}}}
--- end ---
--- start constants_impl ---
public const {{TYPE}} {{NAME:uppercase}} = {{VALUE_ENCODED}};
--- end ---
--- start default_ctor inline ---
{{DEFAULT_DECLARATION}}{{LAST==false?, }}
--- end ---
--- start constructor inline ---
{{TYPE}} {{NAME:camel_case}}{{LAST==false?, }}
--- end ---
--- start constructor_assign ---
this.{{NAME:camel_case}} = {{NAME:camel_case}};
--- end ---
--- start fields ---
public {{TYPE}} {{NAME:camel_case}};
--- end ---
--- start encode ---
^{{WHEN!=?if({{WHEN:camel_case}}){ }}{{ENCODING}}{{WHEN!=? \}}}
--- end ---
--- start decode ---
//{{WHEN!=?if({{WHEN:camel_case}}){ }}{{DECODING}}{{WHEN!=? \}}}
--- end ---
